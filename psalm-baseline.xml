<?xml version="1.0" encoding="UTF-8"?>
<files psalm-version="5.26.1@d747f6500b38ac4f7dfc5edbcae6e4b637d7add0">
  <file src="app/Console/Commands/Audit/PortSpeeds.php">
    <UndefinedMagicMethod>
      <code><![CDATA[PhysicalInterface::whereNotIn( 'id', $ignorepiids )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Console/Commands/Command.php">
    <UndefinedMagicMethod>
      <code><![CDATA[Customer::selectRaw( 'id,name,autsys' )]]></code>
      <code><![CDATA[User::selectRaw(
            'user.id as id, user.name as name, 
                      user.username as username, user.email as email,
                      GROUP_CONCAT( c.name SEPARATOR "\n" ) AS cname, 
                      GROUP_CONCAT( 
                      CASE 
                        WHEN c2u.privs = 3 THEN "SU"
                        WHEN c2u.privs = 2 THEN "CA"
                        WHEN c2u.privs = 1 THEN "CU"
                      END 
                      SEPARATOR "\n" ) 
                      AS privs' )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Console/Commands/Contact/ExportGroup.php">
    <RedundantCondition>
      <code><![CDATA[$name]]></code>
      <code><![CDATA[$type]]></code>
    </RedundantCondition>
    <UndefinedMagicMethod>
      <code><![CDATA[Contact::selectRaw( 'c.name AS name, c.position as position, c.email AS email, c.phone AS phone, c.mobile AS mobile,
                    c.facilityaccess AS facilityaccess, c.mayauthorize AS mayauthorize, c.notes as notes' )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Console/Commands/Grapher/EmailPortUtilisation.php">
    <UndefinedMagicMethod>
      <code><![CDATA[get]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Console/Commands/Grapher/EmailPortsWithCounts.php">
    <MissingDocblockType>
      <code><![CDATA[private function emailPortsWithCounts( $category ): array]]></code>
    </MissingDocblockType>
    <UndefinedMagicMethod>
      <code><![CDATA[Customer::find( $d[ 'cust_id' ] )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Console/Commands/Grapher/EmailTrafficDeltas.php">
    <InvalidOperand>
      <code><![CDATA[config('grapher.cli.traffic_differentials.stddev_calc_length', 60)]]></code>
    </InvalidOperand>
    <MissingDocblockType>
      <code><![CDATA[private function portsWithDelta( Carbon $day, float $stddev ): array]]></code>
    </MissingDocblockType>
    <UndefinedMagicMethod>
      <code><![CDATA[TrafficDaily::where( 'cust_id', $c->id )]]></code>
      <code><![CDATA[get]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Console/Commands/Grapher/PruneDailyP2p.php">
    <UndefinedMagicMethod>
      <code><![CDATA[P2pDailyStats::where( 'day', '<', $before->format('Y-m-d') )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Console/Commands/Grapher/UploadDailyP2p.php">
    <UndefinedMagicMethod>
      <code><![CDATA[P2pDailyStats::updateOrCreate( [
                        'cust_id' => $customer->id,
                        'day'     => $start->format( 'Y-m-d' ),
                        'peer_id' => $peerId,
                    ],
                    $traffic
                )]]></code>
      <code><![CDATA[when]]></code>
    </UndefinedMagicMethod>
    <UndefinedMagicPropertyFetch>
      <code><![CDATA[$customer->virtualinterfaces]]></code>
    </UndefinedMagicPropertyFetch>
  </file>
  <file src="app/Console/Commands/Grapher/UploadPhysIntStatsToDb.php">
    <ImplicitToStringCast>
      <code><![CDATA[$today]]></code>
    </ImplicitToStringCast>
    <InvalidOperand>
      <code><![CDATA[config( 'grapher.cli.traffic_daily.delete_old_days', 140 )]]></code>
    </InvalidOperand>
    <MissingDocblockType>
      <code><![CDATA[public function handle(): int]]></code>
    </MissingDocblockType>
    <UndefinedMagicMethod>
      <code><![CDATA[TrafficDailyPhysInt::where( 'day', $today->format('Y-m-d') )]]></code>
      <code><![CDATA[TrafficDailyPhysInt::where( 'day', '<', $day->format('Y-m-d') )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Console/Commands/Grapher/UploadStatsToDb.php">
    <ImplicitToStringCast>
      <code><![CDATA[$today]]></code>
    </ImplicitToStringCast>
    <InvalidOperand>
      <code><![CDATA[config( 'grapher.cli.traffic_daily.delete_old_days', 140 )]]></code>
    </InvalidOperand>
    <UndefinedMagicMethod>
      <code><![CDATA[TrafficDaily:: where( 'day', '<', $day->format('Y-m-d') )]]></code>
      <code><![CDATA[TrafficDaily::where( 'day', $today->format('Y-m-d') )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Console/Commands/Helpdesk/UpdateOrganisations.php">
    <UndefinedMagicMethod>
      <code><![CDATA[Contact::create([
            'name'      => $cust->name . ' - NOC',
            'email'     => $cust->nocemail,
            'mobile'    => $cust->nocphone,
        ])]]></code>
      <code><![CDATA[Contact::create([
            'name'      => $cust->name . ' - Peering',
            'email'     => $cust->peeringemail,
        ])]]></code>
      <code><![CDATA[getUser]]></code>
      <code><![CDATA[getUser]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Console/Commands/InManrs.php">
    <UndefinedConstant>
      <code><![CDATA[APPLICATION_VERSION]]></code>
    </UndefinedConstant>
    <UndefinedMagicMethod>
      <code><![CDATA[current]]></code>
      <code><![CDATA[current]]></code>
      <code><![CDATA[current]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Console/Commands/InPeeringDb.php">
    <MissingDocblockType>
      <code><![CDATA[public function handle(): int]]></code>
    </MissingDocblockType>
    <UndefinedMagicMethod>
      <code><![CDATA[current]]></code>
      <code><![CDATA[current]]></code>
      <code><![CDATA[current]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Console/Commands/Irrdb/UpdateAsnDb.php">
    <MissingDocblockType>
      <code><![CDATA[public function handle(): int]]></code>
    </MissingDocblockType>
  </file>
  <file src="app/Console/Commands/Irrdb/UpdateDb.php">
    <UndefinedMagicMethod>
      <code><![CDATA[Customer::find( $custarg )]]></code>
      <code><![CDATA[get]]></code>
      <code><![CDATA[get]]></code>
      <code><![CDATA[get]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Console/Commands/Irrdb/UpdatePrefixDb.php">
    <MissingDocblockType>
      <code><![CDATA[public function handle(): int]]></code>
    </MissingDocblockType>
  </file>
  <file src="app/Console/Commands/MailingList/GetSubscribers.php">
    <MissingDocblockType>
      <code><![CDATA[public function handle(): int]]></code>
    </MissingDocblockType>
  </file>
  <file src="app/Console/Commands/MailingList/Init.php">
    <MissingDocblockType>
      <code><![CDATA[public function handle(): int]]></code>
    </MissingDocblockType>
  </file>
  <file src="app/Console/Commands/Redcentric.php">
    <UndefinedMagicMethod>
      <code><![CDATA[CustomerToUser::updateOrCreate(
                [
                    'customer_id' => $u->custid,
                    'user_id'     => $u->id,
                ],
                [
                    'privs' => $u->privs,
                ]
            )]]></code>
      <code><![CDATA[User2FA::updateOrCreate(
                [ 'user_id' => $uid ],
                [
                    'enabled' => isset( $up['tfa.totp.enabled'] ) && ( $up['tfa.totp.enabled'][0] == 1 ),
                    'secret' => isset( $up['tfa.totp.secret'] ) ? $up['tfa.totp.secret'][0] : null,
                ]
            )]]></code>
      <code><![CDATA[User::find( $uid )]]></code>
      <code><![CDATA[User::updateOrCreate(
                [ 'id' => $uc[0] ],
                [
                    'custid' => $uc[1],
                    'username' => $uc[2],
                    'password' => $uc[3],
                    'email' => $uc[4],
                    'authorisedMobile' => $uc[5],
                    'uid' => $uc[6],
                    'privs' => $uc[7],
                    'disabled' => $uc[8],
                    'lastupdatedby' => $uc[10],
                    'creator' => $uc[11],
                    'created_at' => $uc[12],
                    'updated_at' => $uc[9],
                ],
            )]]></code>
      <code><![CDATA[User::where('username', $uc[2] )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Console/Commands/RipeAtlas/CompleteRequests.php">
    <MissingDocblockType>
      <code><![CDATA[public function handle(): int]]></code>
    </MissingDocblockType>
    <UndefinedMagicMethod>
      <code><![CDATA[AtlasRun::whereNull( 'completed_at' )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Console/Commands/RipeAtlas/CreateMeasurements.php">
    <MissingDocblockType>
      <code><![CDATA[public function handle(): int]]></code>
    </MissingDocblockType>
    <UndefinedMagicMethod>
      <code><![CDATA[AtlasRun::whereNull('started_at' )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Console/Commands/RipeAtlas/RunMeasurements.php">
    <MissingDocblockType>
      <code><![CDATA[public function handle(): int]]></code>
    </MissingDocblockType>
    <UndefinedMagicMethod>
      <code><![CDATA[AtlasMeasurement::select('am.*' )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Console/Commands/RipeAtlas/StopAllMeasurements.php">
    <MissingDocblockType>
      <code><![CDATA[public function handle(): int]]></code>
    </MissingDocblockType>
  </file>
  <file src="app/Console/Commands/RipeAtlas/UpdateMeasurements.php">
    <MissingDocblockType>
      <code><![CDATA[public function handle(): int]]></code>
    </MissingDocblockType>
    <UndefinedMagicMethod>
      <code><![CDATA[AtlasMeasurement::whereNull( 'atlas_stop' )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Console/Commands/RipeAtlas/UpdateProbes.php">
    <MissingDocblockType>
      <code><![CDATA[public function handle(): int]]></code>
    </MissingDocblockType>
    <UndefinedMagicMethod>
      <code><![CDATA[Customer::find( $cust )]]></code>
      <code><![CDATA[Customer::where( 'autsys', $cust )]]></code>
      <code><![CDATA[Customer::where( 'shortname', $cust )]]></code>
      <code><![CDATA[get]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Console/Commands/Rir/GenerateObject.php">
    <MissingDocblockType>
      <code><![CDATA[public function handle()]]></code>
    </MissingDocblockType>
  </file>
  <file src="app/Console/Commands/Router/FilteredPrefixes.php">
    <UndefinedMagicMethod>
      <code><![CDATA[Customer::find( $custarg )]]></code>
      <code><![CDATA[Customer::where( 'autsys', $custarg )]]></code>
      <code><![CDATA[Customer::where( 'shortname', $custarg  )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Console/Commands/Router/GenerateConfiguration.php">
    <UndefinedMagicMethod>
      <code><![CDATA[Router::where( 'handle', $this->argument('handle')  )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Console/Commands/Switches/ReindexIfIndex.php">
    <MissingDocblockType>
      <code><![CDATA[public function handle()]]></code>
    </MissingDocblockType>
    <TooManyArguments>
      <code><![CDATA[option]]></code>
    </TooManyArguments>
    <UndefinedMagicMethod>
      <code><![CDATA[Switcher::where( 'name', $this->argument('switch') )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Console/Commands/Switches/SnmpPoll.php">
    <MissingDocblockType>
      <code><![CDATA[public function handle()]]></code>
    </MissingDocblockType>
    <TooManyArguments>
      <code><![CDATA[option]]></code>
      <code><![CDATA[option]]></code>
      <code><![CDATA[option]]></code>
      <code><![CDATA[option]]></code>
      <code><![CDATA[option]]></code>
    </TooManyArguments>
    <UndefinedMagicMethod>
      <code><![CDATA[Switcher::where( 'active', true )]]></code>
      <code><![CDATA[Switcher::where( 'name', $this->argument('switch') )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Console/Commands/Upgrade/Customer2Users.php">
    <MissingDocblockType>
      <code><![CDATA[public function handle()]]></code>
    </MissingDocblockType>
    <UndefinedMagicMethod>
      <code><![CDATA[UserLoginHistory::where( 'user_id', $u->id )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Console/Commands/Upgrade/MigrateL2Addresses.php">
    <UndefinedMagicMethod>
      <code><![CDATA[Layer2Address::create([
                        'mac'                   => $mac->mac,
                        'vlan_interface_id'     => $vli->id,
                        'firstseen'             => now(),
                    ])]]></code>
      <code><![CDATA[Layer2Address::from( 'l2address AS l' )]]></code>
      <code><![CDATA[VirtualInterface::find( $mac->virtualinterfaceid )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Console/Commands/Upgrade/PromoteCustUser.php">
    <MissingDocblockType>
      <code><![CDATA[public function handle()]]></code>
    </MissingDocblockType>
    <UndefinedMagicMethod>
      <code><![CDATA[CustomerToUser::where( 'privs', User::AUTH_CUSTUSER )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Console/Commands/Upgrade/RemoveCustAdmin.php">
    <MissingDocblockType>
      <code><![CDATA[public function handle()]]></code>
    </MissingDocblockType>
    <UndefinedMagicMethod>
      <code><![CDATA[ApiKey::where( 'user_id', $user->id )]]></code>
      <code><![CDATA[CustomerToUser::where( 'privs', User::AUTH_CUSTADMIN )]]></code>
      <code><![CDATA[UserLoginHistory::where( 'customer_to_user_id', $c2u->id )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Console/Commands/Upgrade/ResetMysqlViews.php">
    <MissingDocblockType>
      <code><![CDATA[public function handle(): int]]></code>
    </MissingDocblockType>
  </file>
  <file src="app/Console/Commands/User/Create.php">
    <RedundantCondition>
      <code><![CDATA[$option !== 'send-welcome-email']]></code>
      <code><![CDATA[$option !== 'send-welcome-email']]></code>
    </RedundantCondition>
  </file>
  <file src="app/Console/Commands/User/SetPassword.php">
    <InvalidScalarArgument>
      <code><![CDATA[$search]]></code>
    </InvalidScalarArgument>
    <UndefinedMagicMethod>
      <code><![CDATA[User::find( $uid )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Console/Commands/Utils/ExpungeLogs.php">
    <UndefinedMagicMethod>
      <code><![CDATA[ApiKey::whereNotNull( 'expires' )]]></code>
      <code><![CDATA[Log::where( 'created_at', '<', $sixmonthsago )]]></code>
      <code><![CDATA[UserLoginHistory::where( 'at', '<', $sixmonthsago )]]></code>
      <code><![CDATA[UserRememberToken::where( 'expires', '<', now()->format( 'Y-m-d H:i:s' ) )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Console/Commands/Utils/SmtpMailTest.php">
    <InvalidCast>
      <code><![CDATA[$mail_default]]></code>
      <code><![CDATA[$mail_default]]></code>
      <code><![CDATA[$mail_default]]></code>
      <code><![CDATA[$mail_default]]></code>
      <code><![CDATA[$mail_default]]></code>
    </InvalidCast>
  </file>
  <file src="app/Console/Commands/Utils/UpdateOuiDatabase.php">
    <MissingDocblockType>
      <code><![CDATA[public function handle()]]></code>
    </MissingDocblockType>
    <UndefinedMagicMethod>
      <code><![CDATA[Oui::count()]]></code>
      <code><![CDATA[Oui::create([
                    'oui'           => $oui,
                    'organisation'  => $organisation
                ])]]></code>
      <code><![CDATA[Oui::truncate()]]></code>
      <code><![CDATA[Oui::where( 'oui', $oui  )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Console/Commands/Vagrant/GenerateBirdseyeConfigurationsCommand.php">
    <UndefinedMagicMethod>
      <code><![CDATA[Router::get()]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Console/Commands/Vagrant/GenerateClientRouterConfigurationsCommand.php">
    <UndefinedMagicMethod>
      <code><![CDATA[VlanInterface::where( 'rsclient', 1 )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Events/Customer/Note/Changed.php">
    <RedundantCondition>
      <code><![CDATA[$cn]]></code>
    </RedundantCondition>
  </file>
  <file src="app/Http/Controllers/AdminController.php">
    <MissingDocblockType>
      <code><![CDATA[private function publicPeeringGraphs( Request $r ): array]]></code>
    </MissingDocblockType>
    <UndefinedMagicMethod>
      <code><![CDATA[Cabinet::orderBy('name' )]]></code>
      <code><![CDATA[Customer::selectRaw('type AS ctype, COUNT( type ) AS cnt')]]></code>
      <code><![CDATA[Infrastructure::orderBy('name' )]]></code>
      <code><![CDATA[Location::orderBy('name' )]]></code>
      <code><![CDATA[VlanInterface::selectRaw(
            'v.id AS vlanid,
                        v.name AS vlanname,
                        COUNT(vli.id) AS overall_count, 
                        SUM(vli.rsclient = 1) AS rsclient_count,
                        SUM(vli.ipv6enabled = 1) AS ipv6_count' )]]></code>
      <code><![CDATA[orderBy]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Http/Controllers/Api/V4/Customer/Note/CustomerNotesController.php">
    <MissingDocblockType>
      <code><![CDATA[public function create( Request $r, Customer $cust ): JsonResponse]]></code>
    </MissingDocblockType>
    <NoInterfaceProperties>
      <code><![CDATA[Auth::getUser()->custid]]></code>
      <code><![CDATA[Auth::getUser()->customer]]></code>
    </NoInterfaceProperties>
  </file>
  <file src="app/Http/Controllers/Api/V4/CustomerController.php">
    <UndefinedMagicMethod>
      <code><![CDATA[Customer::select( [ 's.id AS id', 's.name' ] )]]></code>
      <code><![CDATA[PatchPanel::findOrFail( $r->patch_panel_id )]]></code>
      <code><![CDATA[Vlan::findOrFail( $r->vlanid )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Http/Controllers/Api/V4/DnsController.php">
    <MissingDocblockType>
      <code><![CDATA[private function loadRecords( Vlan $vlan, int $protocol ): array]]></code>
    </MissingDocblockType>
  </file>
  <file src="app/Http/Controllers/Api/V4/IrrdbPrefixController.php">
    <UndefinedMagicMethod>
      <code><![CDATA[Customer::find( $r->custid )]]></code>
      <code><![CDATA[IrrdbPrefix::where( 'customer_id', $cust->id )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Http/Controllers/Api/V4/Layer2AddressController.php">
    <MissingDocblockType>
      <code><![CDATA[public function delete( Layer2Address $l2a, bool $showFeMessage = false  ): JsonResponse]]></code>
    </MissingDocblockType>
    <UndefinedMagicMethod>
      <code><![CDATA[Layer2Address::create( [
            'mac' => $mac,
            'vlan_interface_id' => $r->vlan_interface_id
        ] )]]></code>
      <code><![CDATA[Layer2Address::from( 'l2address AS l' )]]></code>
      <code><![CDATA[User::find( Auth::id() )]]></code>
      <code><![CDATA[User::find( Auth::id() )]]></code>
      <code><![CDATA[VlanInterface::findOrFail( $r->vlan_interface_id )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Http/Controllers/Api/V4/NagiosController.php">
    <UndefinedMagicMethod>
      <code><![CDATA[Router::where( 'api_type', Router::API_TYPE_BIRDSEYE )]]></code>
      <code><![CDATA[Router::where( 'api_type', Router::API_TYPE_BIRDSEYE )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Http/Controllers/Api/V4/PatchPanelPortController.php">
    <UndefinedMagicMethod>
      <code><![CDATA[PatchPanelPort::where( 'id', $ppp->id )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Http/Controllers/Api/V4/Provisioner/YamlController.php">
    <MissingDocblockType>
      <code><![CDATA[private function structuredResponse( array $array, string $format ): Response]]></code>
      <code><![CDATA[public function bgpForSwitch( Switcher $switch, string $format ): Response]]></code>
      <code><![CDATA[public function coreLinkForSwitch( Switcher $switch, string $format ): Response]]></code>
      <code><![CDATA[public function forSwitch( Switcher $switch, string $format ): Response]]></code>
      <code><![CDATA[public function listCoreBundle( string $format ): Response]]></code>
      <code><![CDATA[public function listSwitch( string $format ): Response]]></code>
      <code><![CDATA[public function showSwitch( Switcher $switch, string $format ): Response]]></code>
      <code><![CDATA[public function showSwitchByName( string $switchname, string $format ): Response]]></code>
      <code><![CDATA[public function vlansForSwitch( Switcher $switch, string $format ): Response]]></code>
    </MissingDocblockType>
    <UndefinedMagicMethod>
      <code><![CDATA[CoreBundle::selectRaw( "cb.type, cb.ipv4_subnet as cbSubnet, cb.enabled as cbEnabled, 
                        cl.enabled as clEnabled, cb.description, cl.bfd, sp{$side}.name,
                        pi{$side}.speed, pi{$side}.autoneg, cl.ipv4_subnet as clSubnet, s{$side}.id as saId" )]]></code>
      <code><![CDATA[Switcher::selectRaw( 'loopback_ip' )]]></code>
      <code><![CDATA[Switcher::selectRaw( 's.name AS name, s.id AS id, i.id AS infrastructure, s.active AS active' )]]></code>
      <code><![CDATA[Vlan::selectRaw( 'v.name, v.number as tag, v.private, v.config_name' )]]></code>
      <code><![CDATA[first]]></code>
      <code><![CDATA[first]]></code>
      <code><![CDATA[first]]></code>
      <code><![CDATA[first]]></code>
      <code><![CDATA[first]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Http/Controllers/Api/V4/PublicController.php">
    <MissingDocblockType>
      <code><![CDATA[public function test( Request $r ): Response|JsonResponse]]></code>
    </MissingDocblockType>
    <NoInterfaceProperties>
      <code><![CDATA[Auth::getUser()->customer]]></code>
      <code><![CDATA[Auth::getUser()->customer]]></code>
      <code><![CDATA[Auth::getUser()->id]]></code>
      <code><![CDATA[Auth::getUser()->privs]]></code>
      <code><![CDATA[Auth::getUser()->username]]></code>
      <code><![CDATA[Auth::getUser()->username]]></code>
    </NoInterfaceProperties>
    <UndefinedMagicMethod>
      <code><![CDATA[Infrastructure::select( [ 'i.name', 'i.shortname', 'i.ixf_ix_id', 'i.peeringdb_ix_id' ] )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Http/Controllers/Api/V4/RipeAtlasController.php">
    <MissingDocblockType>
      <code><![CDATA[public function getAtlasMeasurementDetail( int $atlasId ): array]]></code>
      <code><![CDATA[public function getAtlasProbeDetail( int $atlasid ): array]]></code>
    </MissingDocblockType>
  </file>
  <file src="app/Http/Controllers/Api/V4/RouterController.php">
    <MissingDocblockType>
      <code><![CDATA[public function genConfig( string $handle ): Response]]></code>
    </MissingDocblockType>
    <UndefinedMagicMethod>
      <code><![CDATA[first]]></code>
      <code><![CDATA[first]]></code>
      <code><![CDATA[first]]></code>
      <code><![CDATA[first]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Http/Controllers/Api/V4/SflowReceiverController.php">
    <MissingDocblockType>
      <code><![CDATA[private function structuredResponse( array $array, string $format ): Response]]></code>
      <code><![CDATA[public function getReceiverList( string $format = null ): Response]]></code>
    </MissingDocblockType>
  </file>
  <file src="app/Http/Controllers/Api/V4/SwitchController.php">
    <UndefinedMagicMethod>
      <code><![CDATA[SwitchPort::selectRaw( 'sp.name AS name, sp.type AS type, sp.id AS id' )]]></code>
      <code><![CDATA[SwitchPort::selectRaw( 'sp.name AS name, sp.type AS type, sp.id AS id' )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Http/Controllers/Api/V4/SwitchPortController.php">
    <UndefinedMagicMethod>
      <code><![CDATA[SwitchPort::selectRaw( 'COUNT( c.id ) as nb, c.id, c.name' )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Http/Controllers/Api/V4/UserController.php">
    <UndefinedMagicMethod>
      <code><![CDATA[activeOnly]]></code>
      <code><![CDATA[get]]></code>
      <code><![CDATA[get]]></code>
      <code><![CDATA[whereIn]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Http/Controllers/Api/V4/VlanController.php">
    <InvalidScalarArgument>
      <code><![CDATA[Router::PROTOCOL_IPV4]]></code>
      <code><![CDATA[Router::PROTOCOL_IPV6]]></code>
    </InvalidScalarArgument>
    <MissingDocblockType>
      <code><![CDATA[public function ipAddresses( Vlan $v ) : JsonResponse]]></code>
    </MissingDocblockType>
  </file>
  <file src="app/Http/Controllers/Api/V4/VlanInterfaceController.php">
    <UndefinedMagicMethod>
      <code><![CDATA[VlanInterface::selectRaw(
            'vli.id AS vliid, l2a.mac AS mac, vl.number as tag, vl.infrastructureid as infrastructure'
        )]]></code>
      <code><![CDATA[VlanInterface::selectRaw(
            'vli.id AS vliid, ma.mac AS mac, vl.number as tag, vl.infrastructureid as infrastructure'
        )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Http/Controllers/Api/V4/WhoisController.php">
    <InvalidOperand>
      <code><![CDATA[config( 'ixp_api.whois.asn2.host' )]]></code>
      <code><![CDATA[config( 'ixp_api.whois.asn2.host' )]]></code>
    </InvalidOperand>
    <InvalidScalarArgument>
      <code><![CDATA[$asn]]></code>
    </InvalidScalarArgument>
  </file>
  <file src="app/Http/Controllers/ApiKeyController.php">
    <InvalidOperand>
      <code><![CDATA[config( 'ixp_fe.api_keys.max_keys' )]]></code>
    </InvalidOperand>
    <MissingDocblockType>
      <code><![CDATA[public function doStore( Request $r )]]></code>
      <code><![CDATA[public function doUpdate( Request $r, int $id )]]></code>
    </MissingDocblockType>
    <RedundantCondition>
      <code><![CDATA[User::AUTH_CUSTADMIN]]></code>
      <code><![CDATA[User::AUTH_CUSTUSER]]></code>
    </RedundantCondition>
    <UndefinedMagicMethod>
      <code><![CDATA[ApiKey::findOrFail( $id )]]></code>
      <code><![CDATA[ApiKey::findOrFail( $id )]]></code>
      <code><![CDATA[ApiKey::where( 'user_id', Auth::id() )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Http/Controllers/Auth/ForgotPasswordController.php">
    <MissingDocblockType>
      <code><![CDATA[public function sendResetLinkEmail( Request $r ): RedirectResponse]]></code>
    </MissingDocblockType>
    <UndefinedMagicMethod>
      <code><![CDATA[User::where( 'email', $r->email )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Http/Controllers/Auth/LoginController.php">
    <InvalidOperand>
      <code><![CDATA[config( "ixp_fe.lang.customer.many" )]]></code>
      <code><![CDATA[config( "ixp_fe.lang.customer.many" )]]></code>
      <code><![CDATA[config( "ixp_fe.lang.customer.many" )]]></code>
      <code><![CDATA[config( "ixp_fe.lang.customer.one" )]]></code>
      <code><![CDATA[config( "ixp_fe.lang.customer.one" )]]></code>
    </InvalidOperand>
    <MissingDocblockType>
      <code><![CDATA[public function peeringdbHandleProviderCallback( Request $r )]]></code>
    </MissingDocblockType>
    <NoInterfaceProperties>
      <code><![CDATA[$suser->user]]></code>
    </NoInterfaceProperties>
    <UndefinedMagicMethod>
      <code><![CDATA[CustomerToUser::where( [ 'user_id' => $user->id ] )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Http/Controllers/Auth/ResetPasswordController.php">
    <MissingDocblockType>
      <code><![CDATA[protected function resetPassword( User $user, string $password ): void]]></code>
    </MissingDocblockType>
  </file>
  <file src="app/Http/Controllers/Auth/SwitchCustomerController.php">
    <InvalidOperand>
      <code><![CDATA[config( "ixp_fe.lang.customer.one" )]]></code>
      <code><![CDATA[config( "ixp_fe.lang.customer.one" )]]></code>
    </InvalidOperand>
    <UndefinedMagicMethod>
      <code><![CDATA[CustomerToUser::where( 'customer_id', $cust->id )]]></code>
      <code><![CDATA[UserLoginHistory::create( [
                'ip'                    => $this->getIp(),
                'at'                    => now(),
                'customer_to_user_id'   => $c2u->id,
                'via'                   => 'SwitchCustomer'
            ] )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Http/Controllers/Auth/SwitchUserController.php">
    <InvalidOperand>
      <code><![CDATA[config( 'ixp_fe.lang.customer.one' )]]></code>
      <code><![CDATA[config( 'ixp_fe.lang.customer.one' )]]></code>
    </InvalidOperand>
    <NoInterfaceProperties>
      <code><![CDATA[Auth::getUser()->name]]></code>
      <code><![CDATA[Auth::getUser()->name]]></code>
      <code><![CDATA[Auth::getUser()->name]]></code>
      <code><![CDATA[Auth::getUser()->name]]></code>
      <code><![CDATA[Auth::getUser()->username]]></code>
      <code><![CDATA[Auth::getUser()->username]]></code>
    </NoInterfaceProperties>
    <UndefinedMagicMethod>
      <code><![CDATA[Customer::find( session()->get( "switched_customer_from" ) )]]></code>
      <code><![CDATA[CustomerToUser::find( session()->get( "switched_c2u_to" ) )]]></code>
      <code><![CDATA[User::find( session()->get( "switched_user_from" ) )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Http/Controllers/CabinetController.php">
    <MissingDocblockType>
      <code><![CDATA[public function doStore( Request $r )]]></code>
    </MissingDocblockType>
    <UndefinedMagicMethod>
      <code><![CDATA[Cabinet::create( $r->all() )]]></code>
      <code><![CDATA[Cabinet::findOrFail( $id )]]></code>
      <code><![CDATA[Cabinet::findOrFail( $id )]]></code>
      <code><![CDATA[Cabinet::select( [ 'cabinet.*', 'l.name AS locationname' ] )]]></code>
      <code><![CDATA[Location::orderBy( 'name' )]]></code>
      <code><![CDATA[Location::orderBy( 'name' )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Http/Controllers/ConsoleServer/ConsoleServerConnectionController.php">
    <MissingDocblockType>
      <code><![CDATA[public function doStore( Request $r )]]></code>
    </MissingDocblockType>
    <UndefinedMagicMethod>
      <code><![CDATA[ConsoleServer::find( request()->cs )]]></code>
      <code><![CDATA[ConsoleServer::orderBy( 'name' )]]></code>
      <code><![CDATA[ConsoleServer::orderBy( 'name' )]]></code>
      <code><![CDATA[ConsoleServer::orderBy( 'name' )]]></code>
      <code><![CDATA[ConsoleServerConnection::find( $id )]]></code>
      <code><![CDATA[ConsoleServerConnection::findOrFail( $id )]]></code>
      <code><![CDATA[ConsoleServerConnection::make( $r->all() )]]></code>
      <code><![CDATA[ConsoleServerConnection::where( "console_server_id" , $r->console_server_id  )]]></code>
      <code><![CDATA[Customer::orderBy( 'name' )]]></code>
      <code><![CDATA[Customer::orderBy( 'name' )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Http/Controllers/ConsoleServer/ConsoleServerController.php">
    <MissingDocblockType>
      <code><![CDATA[public function doStore( Request $r ): bool|RedirectResponse]]></code>
      <code><![CDATA[public function doUpdate( Request $r, int $id ): bool|RedirectResponse]]></code>
    </MissingDocblockType>
    <UndefinedMagicMethod>
      <code><![CDATA[Cabinet::selectRaw( "id, concat( name, ' [', colocation, ']') AS name" )]]></code>
      <code><![CDATA[Cabinet::selectRaw( "id, concat( name, ' [', colocation, ']') AS name" )]]></code>
      <code><![CDATA[ConsoleServer::create( $r->all() )]]></code>
      <code><![CDATA[ConsoleServer::findOrFail( $id )]]></code>
      <code><![CDATA[ConsoleServer::findOrFail( $id )]]></code>
      <code><![CDATA[ConsoleServer::selectRaw(
            'cs.*,
            v.id AS vendorid, v.name AS vendor,
            c.id AS cabinetid, c.name AS cabinet, 
            l.id AS locationid, l.shortname AS facility,
            COUNT( DISTINCT csc.id ) AS num_connections'
        )]]></code>
      <code><![CDATA[Vendor::orderBy( 'name' )]]></code>
      <code><![CDATA[Vendor::orderBy( 'name' )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Http/Controllers/Contact/ContactController.php">
    <MissingDocblockType>
      <code><![CDATA[protected function createPrepareForm(): array]]></code>
      <code><![CDATA[protected function editPrepareForm( int $id ): array]]></code>
      <code><![CDATA[protected function listGetData( ?int $id = null ): array]]></code>
      <code><![CDATA[public function doStore( Request $r ): bool|RedirectResponse]]></code>
      <code><![CDATA[public function doUpdate( Request $r, int $id ): bool|RedirectResponse]]></code>
    </MissingDocblockType>
    <NoInterfaceProperties>
      <code><![CDATA[Auth::getUser()->custid]]></code>
    </NoInterfaceProperties>
    <RedundantCondition>
      <code><![CDATA[User::AUTH_CUSTADMIN]]></code>
      <code><![CDATA[User::AUTH_CUSTUSER]]></code>
    </RedundantCondition>
    <UndefinedMagicMethod>
      <code><![CDATA[Contact::findOrFail( $id )]]></code>
      <code><![CDATA[Contact::findOrFail( $id )]]></code>
      <code><![CDATA[Contact::make(
            array_merge( $r->all(), [
                'creator'       => $us->username,
                'lastupdatedby' => Auth::id()
            ] )
        )]]></code>
      <code><![CDATA[Contact::select( [ 'contact.*', 'cust.name AS customer', 'cust.id AS custid' ])]]></code>
      <code><![CDATA[Contact::when( $groupid , function ( Builder $query, $groupid ) {
                        return $query->leftJoin( 'contact_to_group', function( $join ) {
                            $join->on( 'contact.id', 'contact_to_group.contact_id');
                        })->where('contact_to_group.contact_group_id', $groupid );
                    })]]></code>
      <code><![CDATA[ContactGroup::find( $gToDelete )]]></code>
      <code><![CDATA[ContactGroup::find( $groupid )]]></code>
      <code><![CDATA[Customer::find( request()->cust )]]></code>
      <code><![CDATA[Customer::orderBy( 'name' )]]></code>
      <code><![CDATA[Customer::orderBy( 'name' )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Http/Controllers/Contact/ContactGroupController.php">
    <InvalidArgument>
      <code><![CDATA[array_keys( config( 'contact_group.types' ) )]]></code>
    </InvalidArgument>
    <MissingDocblockType>
      <code><![CDATA[protected function createPrepareForm(): array]]></code>
      <code><![CDATA[protected function editPrepareForm( int $id = null ): array]]></code>
      <code><![CDATA[protected function listGetData( ?int $id = null ): array]]></code>
      <code><![CDATA[public function doStore( Request $r ): bool|RedirectResponse]]></code>
      <code><![CDATA[public function doUpdate( Request $r, int $id ): bool|RedirectResponse]]></code>
    </MissingDocblockType>
    <UndefinedMagicMethod>
      <code><![CDATA[ContactGroup::create( $r->all() )]]></code>
      <code><![CDATA[ContactGroup::findOrFail( $id )]]></code>
      <code><![CDATA[ContactGroup::findOrFail( $id )]]></code>
      <code><![CDATA[ContactGroup::when( $id , function( Builder $q, $id ) {
                return $q->where('id', $id );
            } )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Http/Controllers/ContentController.php">
    <UndefinedMagicMethod>
      <code><![CDATA[get]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Http/Controllers/Controller.php">
    <MissingDocblockType>
      <code><![CDATA[protected function getAllowedPrivs(): array]]></code>
    </MissingDocblockType>
    <UndefinedMagicMethod>
      <code><![CDATA[Customer::find( request()->custid )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Http/Controllers/CustKitController.php">
    <MissingDocblockType>
      <code><![CDATA[public function doStore( Request $r )]]></code>
      <code><![CDATA[public function doUpdate( Request $r, int $id )]]></code>
    </MissingDocblockType>
    <UndefinedMagicMethod>
      <code><![CDATA[Cabinet::selectRaw( "id, concat( name, ' [', colocation, ']') AS name" )]]></code>
      <code><![CDATA[Cabinet::selectRaw( "id, concat( name, ' [', colocation, ']') AS name" )]]></code>
      <code><![CDATA[Customer::orderBy( 'name' )]]></code>
      <code><![CDATA[Customer::orderBy( 'name' )]]></code>
      <code><![CDATA[CustomerEquipment::findOrFail( $id )]]></code>
      <code><![CDATA[CustomerEquipment::findOrFail( $id )]]></code>
      <code><![CDATA[CustomerEquipment::make( $r->all() )]]></code>
      <code><![CDATA[CustomerEquipment::select( [ 'custkit.*', 'cabinet.name AS cabinet', 'cust.name as customer' ] )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Http/Controllers/Customer/CustomerController.php">
    <InvalidArgument>
      <code><![CDATA[$cbd->purchaseOrderRequired]]></code>
      <code><![CDATA[$cust->status]]></code>
      <code><![CDATA[$cust->type]]></code>
    </InvalidArgument>
    <InvalidOperand>
      <code><![CDATA[config('identity.name')]]></code>
    </InvalidOperand>
    <MissingDocblockType>
      <code><![CDATA[public function delete( Customer $cust ) : RedirectResponse]]></code>
      <code><![CDATA[public function overview( Customer $cust, string $tab = null ) : View]]></code>
      <code><![CDATA[public function store( CustomerRequest $r ): RedirectResponse]]></code>
      <code><![CDATA[public function storeBillingAndRegDetails( BillingInformationRequest $r, Customer $cust ): RedirectResponse]]></code>
      <code><![CDATA[public function update( CustomerRequest $r, Customer $cust ): RedirectResponse]]></code>
      <code><![CDATA[public function welcomeEmail( Customer $cust ) : View]]></code>
    </MissingDocblockType>
    <UndefinedMagicMethod>
      <code><![CDATA[CompanyBillingDetail::create( [ 'purchaseOrderRequired' => 0 ] )]]></code>
      <code><![CDATA[CompanyRegisteredDetail::create( [ 'registeredName' => $r->name ] )]]></code>
      <code><![CDATA[CompanyRegisteredDetail::select( 'jurisdiction' )]]></code>
      <code><![CDATA[Customer::create( array_merge( $r->all(),
            [
                'reseller'                      => $r->isResold ? $r->reseller : null,
                'company_registered_detail_id'  =>  $rdetail->id,
                'company_billing_details_id'    =>  $bdetail->id,
                'creator'                       =>  Auth::id()
            ]
        ) )]]></code>
      <code><![CDATA[Customer::leftJoin( 'virtualinterface AS vi', 'vi.custid', 'cust.id' )]]></code>
      <code><![CDATA[Customer::select( [ 'id', 'name' ] )]]></code>
      <code><![CDATA[Customer::select( [ 'id', 'name' ] )]]></code>
      <code><![CDATA[Customer::select([ 'id', 'name' ])]]></code>
      <code><![CDATA[Customer::selectRaw( 'cust.*' )]]></code>
      <code><![CDATA[IrrdbConfig::orderBy( 'source' )]]></code>
      <code><![CDATA[IrrdbConfig::orderBy( 'source' )]]></code>
      <code><![CDATA[associate]]></code>
      <code><![CDATA[get]]></code>
      <code><![CDATA[groupBy]]></code>
      <code><![CDATA[orderBy]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Http/Controllers/Customer/CustomerNotesController.php">
    <MissingDocblockType>
      <code><![CDATA[public function readAll() : RedirectResponse]]></code>
    </MissingDocblockType>
    <UndefinedMagicMethod>
      <code><![CDATA[Customer::selectRaw(
            'cust.id AS cid, cust.name AS cname, cust.shortname AS cshortname, MAX( cn.updated_at) as latest'
        )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Http/Controllers/Customer/CustomerTagController.php">
    <InvalidOperand>
      <code><![CDATA[config( 'ixp_fe.lang.customer.many' )]]></code>
      <code><![CDATA[config( 'ixp_fe.lang.customer.one' )]]></code>
    </InvalidOperand>
    <MissingDocblockType>
      <code><![CDATA[public function doStore( Request $r ): bool|RedirectResponse]]></code>
      <code><![CDATA[public function doUpdate( Request $r, int $id ): bool|RedirectResponse]]></code>
      <code><![CDATA[public function link( Request $r, Customer $cust ): RedirectResponse]]></code>
    </MissingDocblockType>
    <UndefinedMagicMethod>
      <code><![CDATA[CustomerTag::create( $r->all() )]]></code>
      <code><![CDATA[CustomerTag::findOrFail( $id )]]></code>
      <code><![CDATA[CustomerTag::findOrFail( $r->id )]]></code>
      <code><![CDATA[CustomerTag::orderBy( 'display_as' )]]></code>
      <code><![CDATA[CustomerTag::when( $id , function( Builder $q, $id ) {
            return $q->where('id', $id );
        } )]]></code>
      <code><![CDATA[CustomerToCustomerTag::create([
                    'customer_tag_id'   => $ctag,
                    'customer_id'       => $cust->id,
                ])]]></code>
      <code><![CDATA[CustomerToCustomerTag::where( 'customer_tag_id' , $ctag )]]></code>
      <code><![CDATA[CustomerToCustomerTag::where( 'customer_tag_id' ,$dtag )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Http/Controllers/Customer/LogoController.php">
    <MissingDocblockType>
      <code><![CDATA[public function logos(): View]]></code>
      <code><![CDATA[public function store( LogoRequest $r ): RedirectResponse]]></code>
    </MissingDocblockType>
    <NoInterfaceProperties>
      <code><![CDATA[Auth::getUser()->custid]]></code>
    </NoInterfaceProperties>
    <UndefinedMagicMethod>
      <code><![CDATA[Customer::find( Auth::getUser()->custid )]]></code>
      <code><![CDATA[Customer::findOrFail( $id )]]></code>
      <code><![CDATA[Logo::make( [
            'original_name'     => $file->getClientOriginalName(),
            'stored_name'       => sha1( $img->getEncoded() ) . '.png',
            'uploaded_by'       => $us->username,
            'width'             => $img->width(),
            'height'            => $img->height(),
        ] )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Http/Controllers/DashboardController.php">
    <MissingDocblockType>
      <code><![CDATA[public function index( Request $r, string $tab = null ): RedirectResponse|View]]></code>
      <code><![CDATA[public function storeBillingDetails( BillingDetailsRequest $r ): RedirectResponse]]></code>
      <code><![CDATA[public function storeNocDetails( NocDetailsRequest $r ): RedirectResponse]]></code>
    </MissingDocblockType>
    <NoInterfaceProperties>
      <code><![CDATA[Auth::getUser()->customer]]></code>
      <code><![CDATA[Auth::getUser()->customer]]></code>
      <code><![CDATA[Auth::getUser()->customer]]></code>
    </NoInterfaceProperties>
  </file>
  <file src="app/Http/Controllers/Docstore/DirectoryController.php">
    <NoInterfaceProperties>
      <code><![CDATA[$user->privs]]></code>
      <code><![CDATA[Auth::getUser()->username]]></code>
      <code><![CDATA[Auth::user()->username]]></code>
    </NoInterfaceProperties>
    <UndefinedMagicMethod>
      <code><![CDATA[DocstoreDirectory::create( $r->all() )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Http/Controllers/Docstore/FileController.php">
    <InvalidOperand>
      <code><![CDATA[config( 'filesystems.disks.' . $file->disk . '.root', '*** UNKNOWN LOCATION ***' )]]></code>
    </InvalidOperand>
    <NoInterfaceProperties>
      <code><![CDATA[$user->username]]></code>
      <code><![CDATA[$user->username]]></code>
      <code><![CDATA[Auth::user()->username]]></code>
    </NoInterfaceProperties>
    <UndefinedMagicMethod>
      <code><![CDATA[DocstoreFile::create( [
            'name'                  => $r->name,
            'description'           => $r->description,
            'docstore_directory_id' => $r->docstore_directory_id,
            'min_privs'             => $r->min_privs,
            'path'                  => $path,
            'sha256'                => hash_file( 'sha256', $file ),
            'created_by'            => Auth::id(),
            'file_last_updated'     => now(),
        ] )]]></code>
      <code><![CDATA[User::find( $file->created_by )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Http/Controllers/DocstoreCustomer/DirectoryController.php">
    <InvalidOperand>
      <code><![CDATA[config( 'ixp_fe.lang.customer.one' )]]></code>
      <code><![CDATA[config( 'ixp_fe.lang.customer.one' )]]></code>
    </InvalidOperand>
    <UndefinedMagicMethod>
      <code><![CDATA[Customer::find( $value )]]></code>
      <code><![CDATA[DocstoreCustomerDirectory::create( $r->all() )]]></code>
      <code><![CDATA[DocstoreCustomerDirectory::find( $value )]]></code>
      <code><![CDATA[DocstoreCustomerFile::groupBy( 'cust_id' )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Http/Controllers/DocstoreCustomer/FileController.php">
    <InvalidArgument>
      <code><![CDATA[$file->customer->id]]></code>
    </InvalidArgument>
    <InvalidOperand>
      <code><![CDATA[config( 'filesystems.disks.' . $file->disk . '.root', '*** UNKNOWN LOCATION ***' )]]></code>
    </InvalidOperand>
    <UndefinedMagicMethod>
      <code><![CDATA[DocstoreCustomerFile::create( [
            'name'                              => $r->name,
            'description'                       => $r->description,
            'cust_id'                           => $cust->id,
            'min_privs'                         => $r->min_privs,
            'path'                              => $path,
            'sha256'                            => hash_file( 'sha256', $uploadedFile ),
            'created_by'                        => $r->user()->id,
            'file_last_updated'                 => now(),
            'docstore_customer_directory_id'    => $r->docstore_customer_directory_id,
        ] )]]></code>
      <code><![CDATA[User::find( $file->created_by )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Http/Controllers/FilteredPrefixesController.php">
    <MissingDocblockType>
      <code><![CDATA[public function list( Request $r, Customer $cust ): View]]></code>
    </MissingDocblockType>
  </file>
  <file src="app/Http/Controllers/InfrastructureController.php">
    <InvalidArgument>
      <code><![CDATA[array_values( Countries::getListForSelect( 'iso_3166_2' ) )]]></code>
    </InvalidArgument>
    <InvalidOperand>
      <code><![CDATA[config( 'ixp_api.IXPDB.ixp_www' )]]></code>
      <code><![CDATA[config( 'ixp_api.peeringDB.ixp_www' )]]></code>
    </InvalidOperand>
    <MissingDocblockType>
      <code><![CDATA[public function doStore( Request $r ): bool|RedirectResponse]]></code>
      <code><![CDATA[public function doUpdate( Request $r, int $id ): bool|RedirectResponse]]></code>
    </MissingDocblockType>
    <UndefinedMagicMethod>
      <code><![CDATA[Infrastructure::create( $r->all() )]]></code>
      <code><![CDATA[Infrastructure::findOrFail( $id )]]></code>
      <code><![CDATA[Infrastructure::findOrFail( $id )]]></code>
      <code><![CDATA[Infrastructure::when( $id , static function( Builder $q, $id ) {
            return $q->where('id', $id );
        } )]]></code>
      <code><![CDATA[Infrastructure::where( 'id', '!=', $this->object->id )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Http/Controllers/Interfaces/Common.php">
    <InvalidPropertyFetch>
      <code><![CDATA[$pi->relatedInterface()->virtualInterface]]></code>
      <code><![CDATA[$pi->relatedInterface()->virtualInterface]]></code>
      <code><![CDATA[$pi->relatedInterface()->virtualInterface]]></code>
    </InvalidPropertyFetch>
    <MissingDocblockType>
      <code><![CDATA[public function assignChannelGroup( VirtualInterface $vi ): int]]></code>
      <code><![CDATA[public function buildCorelink( CoreBundle $coreBundle, Request $request, array $virtualInterfaces, bool $edit )]]></code>
      <code><![CDATA[public function processFanoutPhysicalInterface( $r, PhysicalInterface $pi, VirtualInterface $vi ): bool]]></code>
      <code><![CDATA[public function removeRelatedInterface( PhysicalInterface $pi ): void]]></code>
      <code><![CDATA[public function setBundleDetails( VirtualInterface $vi ): void]]></code>
      <code><![CDATA[public function setIp( Request $r, Vlan $v, VlanInterface $vli, bool $ipv6 = false ): bool]]></code>
    </MissingDocblockType>
    <UndefinedMagicMethod>
      <code><![CDATA[$model::where( 'vlanid', $v->id)]]></code>
      <code><![CDATA[$model::where( 'vlanid', $v->id)]]></code>
      <code><![CDATA[SwitchPort::find( $coreLinkDetail[ "hidden-sp-$side" ] )]]></code>
      <code><![CDATA[SwitchPort::findOrFail( $r->input( 'switch-port-fanout' ) )]]></code>
      <code><![CDATA[VirtualInterface::select( [ 'vi.channelgroup' ] )]]></code>
    </UndefinedMagicMethod>
    <UndefinedMagicPropertyAssignment>
      <code><![CDATA[$coreInterface[$side]->physical_interface_id]]></code>
      <code><![CDATA[$physicalInterface[$side]->autoneg]]></code>
      <code><![CDATA[$physicalInterface[$side]->duplex]]></code>
      <code><![CDATA[$physicalInterface[$side]->speed]]></code>
      <code><![CDATA[$physicalInterface[$side]->status]]></code>
      <code><![CDATA[$physicalInterface[$side]->switchportid]]></code>
      <code><![CDATA[$physicalInterface[$side]->virtualinterfaceid]]></code>
    </UndefinedMagicPropertyAssignment>
  </file>
  <file src="app/Http/Controllers/Interfaces/CoreBundleController.php">
    <MissingDocblockType>
      <code><![CDATA[public function storeWizard( Store $r ): RedirectResponse]]></code>
      <code><![CDATA[public function updateWizard( Store $r, CoreBundle $cb): RedirectResponse]]></code>
    </MissingDocblockType>
    <UndefinedMagicMethod>
      <code><![CDATA[CoreBundle::create( $r->all() )]]></code>
      <code><![CDATA[Switcher::select( [ 'id', 'name' ] )]]></code>
      <code><![CDATA[get]]></code>
      <code><![CDATA[get]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Http/Controllers/Interfaces/PhysicalInterfaceController.php">
    <InvalidArgument>
      <code><![CDATA[$pi->speed]]></code>
      <code><![CDATA[$pi->status]]></code>
      <code><![CDATA[$pi->switchPort->switchid]]></code>
    </InvalidArgument>
    <InvalidPropertyFetch>
      <code><![CDATA[$pi->otherPICoreLink()->switchPort]]></code>
    </InvalidPropertyFetch>
    <MissingDocblockType>
      <code><![CDATA[public function delete( Request $r, PhysicalInterface $pi): RedirectResponse]]></code>
      <code><![CDATA[public function store( StorePhysicalInterface $r ): RedirectResponse]]></code>
      <code><![CDATA[public function update( StorePhysicalInterface $r, PhysicalInterface $pi ): RedirectResponse]]></code>
    </MissingDocblockType>
    <RedundantCondition>
      <code><![CDATA[$switchports]]></code>
      <code><![CDATA[$this->resellerMode() && $vi]]></code>
      <code><![CDATA[$vi]]></code>
    </RedundantCondition>
    <TypeDoesNotContainNull>
      <code><![CDATA[[]]]></code>
    </TypeDoesNotContainNull>
    <UndefinedMagicMethod>
      <code><![CDATA[PhysicalInterface::create( $r->all() )]]></code>
      <code><![CDATA[PhysicalInterface::selectRaw(
                'pi.id AS id, pi.speed AS speed, pi.duplex AS duplex, pi.status AS status,
                    pi.notes AS notes, pi.autoneg AS autoneg, pi.rate_limit as rate_limit,
                    c.name AS customer, c.id AS custid,
                    s.name AS switch, s.id AS switchid,
                    vi.id AS vintid,
                    sp.type as type, ppi.id as ppid, fpi.id as fpid,
                    sp.name AS port, l.id AS locid, l.name AS location'
            )]]></code>
      <code><![CDATA[SwitchPort::find( $r->switchportid )]]></code>
      <code><![CDATA[SwitchPort::find( $r->switchportid )]]></code>
      <code><![CDATA[Switcher::orderBy( 'name' )]]></code>
      <code><![CDATA[Switcher::orderBy( 'name' )]]></code>
      <code><![CDATA[VirtualInterface::find( $r->virtualinterfaceid )]]></code>
      <code><![CDATA[VirtualInterface::find( $r->virtualinterfaceid )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Http/Controllers/Interfaces/SflowReceiverController.php">
    <UndefinedMagicMethod>
      <code><![CDATA[SflowReceiver::create( $r->all() )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Http/Controllers/Interfaces/VirtualInterfaceController.php">
    <InvalidArgument>
      <code><![CDATA[Customer::trafficking()->orderBy('name')->get()]]></code>
    </InvalidArgument>
    <MissingDocblockType>
      <code><![CDATA[public function createWizardForCust( Customer $cust ) : View]]></code>
      <code><![CDATA[public function wizard( Customer $cust = null ): View]]></code>
    </MissingDocblockType>
    <TooManyArguments>
      <code><![CDATA[exceptInput]]></code>
    </TooManyArguments>
    <UndefinedMagicMethod>
      <code><![CDATA[Customer::join('cust AS reseller', 'reseller.reseller', 'cust.id')]]></code>
      <code><![CDATA[PhysicalInterface::create( array_merge( $r->all(), [
            'virtualinterfaceid' => $vi->id,
        ] ) )]]></code>
      <code><![CDATA[SwitchPort::find( $r->switchportid )]]></code>
      <code><![CDATA[Switcher::where( 'active', true )]]></code>
      <code><![CDATA[VirtualInterface::create( $r->all() )]]></code>
      <code><![CDATA[VirtualInterface::make( $r->all() )]]></code>
      <code><![CDATA[VirtualInterface::selectRaw(
                'vi.id AS id, 
                            SUM( pi.speed ) AS speed,
                            SUM( pi.rate_limit ) AS rate_limit,
                            COUNT( pi.id ) AS nbpi,
                            c.id AS custid, c.name AS custname,
                            l.id as locationid, l.name AS locationname,
                            s.id AS switchid, s.name AS switchname,
                            GROUP_CONCAT( sp.name ) AS switchport,
                            GROUP_CONCAT( sp.type ) AS switchporttype,
                            GROUP_CONCAT( ppi.id ) AS peering,
                            GROUP_CONCAT( fpi.id ) AS fanout'
                        )]]></code>
      <code><![CDATA[Vlan::find( $r->vlanid )]]></code>
      <code><![CDATA[Vlan::orderBy( 'number' )]]></code>
      <code><![CDATA[Vlan::orderBy( 'number' )]]></code>
      <code><![CDATA[VlanInterface::make( array_merge( $r->all(),
            [
                'virtualinterfaceid' => $vi->id,
                'busyhost'           => false
            ]
        ) )]]></code>
      <code><![CDATA[current]]></code>
      <code><![CDATA[current]]></code>
      <code><![CDATA[orderBy]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Http/Controllers/Interfaces/VlanInterfaceController.php">
    <InvalidArgument>
      <code><![CDATA[$vi->customer->maxprefixes]]></code>
    </InvalidArgument>
    <MissingDocblockType>
      <code><![CDATA[public function duplicate( StoreVlanInterface $r, VlanInterface $vli ): RedirectResponse]]></code>
      <code><![CDATA[public function update( StoreVlanInterface $r, VlanInterface $vli ): RedirectResponse]]></code>
    </MissingDocblockType>
    <RedundantCondition>
      <code><![CDATA[$vi]]></code>
    </RedundantCondition>
    <TypeDoesNotContainType>
      <code><![CDATA[false]]></code>
    </TypeDoesNotContainType>
    <UndefinedMagicMethod>
      <code><![CDATA[Layer2Address::create(
                [
                    'vlan_interface_id' => $vli->id,
                    'mac'               => $l2a->mac,
                ]
            )]]></code>
      <code><![CDATA[Vlan::  orderBy( 'number' )]]></code>
      <code><![CDATA[Vlan::find( $r->vlanid )]]></code>
      <code><![CDATA[Vlan::find( $r->vlanid )]]></code>
      <code><![CDATA[Vlan::find( $r->vlanid )]]></code>
      <code><![CDATA[Vlan::orderBy( 'number' )]]></code>
      <code><![CDATA[VlanInterface::make( $r->all() )]]></code>
      <code><![CDATA[VlanInterface::make()]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Http/Controllers/IpAddressController.php">
    <ImplicitToStringCast>
      <code><![CDATA[$ip]]></code>
      <code><![CDATA[$ip]]></code>
    </ImplicitToStringCast>
    <MissingDocblockType>
      <code><![CDATA[private static function generateSequentialAddresses( IPToolsNetwork $network, bool $decimal = false, bool $overflow = true ): array]]></code>
      <code><![CDATA[public function delete( Request $r, int $id ): RedirectResponse]]></code>
      <code><![CDATA[public function deleteByNetwork( DeleteByNetwork $r, Vlan $vlan ): View|RedirectResponse]]></code>
      <code><![CDATA[public function list( int $protocol, int $vid = null ): View]]></code>
      <code><![CDATA[public function store( Store $r ): RedirectResponse]]></code>
    </MissingDocblockType>
    <UndefinedMagicMethod>
      <code><![CDATA[$ipvxModel::findOrFail( $id )]]></code>
      <code><![CDATA[$ipvxModel::findOrFail( $id )]]></code>
      <code><![CDATA[$ipvxModel::selectRaw( 'ip.id as id, 
                        ip.address as address,' .
            ( $protocol === 4 ? 'inet_aton(ip.address) as aton' : 'hex( inet6_aton( ip.address ) ) as aton') .
                        ",v.name AS vlan,
                        v.id as vlanid,
                        vli.id AS vliid,
                        vli.ipv{$protocol}hostname AS hostname,
                        c.name AS customer, 
                        c.id AS customerid,
                        vi.id AS viid" )]]></code>
      <code><![CDATA[$ipvxModel::selectRaw( 'ip.id as id, 
                        ip.address as address,' .
            ( $protocol === 4 ? 'inet_aton(ip.address) as aton' : 'hex( inet6_aton( ip.address ) ) as aton') .
                        ",v.name AS vlan,
                        v.id as vlanid,
                        vli.id AS vliid,
                        vli.ipv{$protocol}hostname AS hostname,
                        c.name AS customer, 
                        c.id AS customerid,
                        vi.id AS viid" )]]></code>
      <code><![CDATA[$model::whereIn( 'id', $ips->pluck( 'id' ) )]]></code>
      <code><![CDATA[$model::whereIn( 'id', $ips->pluck( 'id' ) )]]></code>
      <code><![CDATA[Vlan::find( $r->vlan )]]></code>
      <code><![CDATA[Vlan::findOrFail( $vid )]]></code>
      <code><![CDATA[orderBy]]></code>
      <code><![CDATA[orderBy]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Http/Controllers/IrrdbConfigController.php">
    <MissingDocblockType>
      <code><![CDATA[public function doStore( Request $r ): bool|RedirectResponse]]></code>
      <code><![CDATA[public function doUpdate( Request $r, int $id ): bool|RedirectResponse]]></code>
    </MissingDocblockType>
    <UndefinedMagicMethod>
      <code><![CDATA[IrrdbConfig::create( $r->all() )]]></code>
      <code><![CDATA[IrrdbConfig::findOrFail( $id )]]></code>
      <code><![CDATA[IrrdbConfig::findOrFail( $id )]]></code>
      <code><![CDATA[IrrdbConfig::when( $id , function( Builder $q, $id ) {
            return $q->where('id', $id );
        } )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Http/Controllers/Layer2AddressController.php">
    <RedundantCondition>
      <code><![CDATA[User::AUTH_CUSTADMIN]]></code>
      <code><![CDATA[User::AUTH_CUSTUSER]]></code>
    </RedundantCondition>
    <UndefinedMagicMethod>
      <code><![CDATA[Layer2Address::selectRaw( "l.*,
            vi.id AS viid,
            c.id AS customerid, c.abbreviatedName AS customer,
            s.name AS switchname,
            vl.name as vlan, vl.id as vlanid, 
            vli.id as vliid,
            GROUP_CONCAT( sp.name ) AS switchport,
            GROUP_CONCAT( DISTINCT ipv4.address ) AS ip4,
            GROUP_CONCAT( DISTINCT ipv6.address ) AS ip6,
            COALESCE( o.organisation, 'Unknown' ) AS organisation"
        )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Http/Controllers/LocationController.php">
    <InvalidArgument>
      <code><![CDATA[array_values( Countries::getListForSelect( 'iso_3166_2' ) )]]></code>
    </InvalidArgument>
    <UndefinedMagicMethod>
      <code><![CDATA[Location::create( $r->all() )]]></code>
      <code><![CDATA[Location::findOrFail( $id )]]></code>
      <code><![CDATA[Location::findOrFail( $id )]]></code>
      <code><![CDATA[Location::when( $id , function( Builder $q, $id ) {
            return $q->where('id', $id );
        } )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Http/Controllers/LogController.php">
    <UndefinedMagicMethod>
      <code><![CDATA[Log::select( 'model' )]]></code>
      <code><![CDATA[Log::select( [ 'user_id', 'username' ] )]]></code>
      <code><![CDATA[Log::selectRaw( 'log.*, u.username' )]]></code>
      <code><![CDATA[User::where( 'username', $r->user )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Http/Controllers/LoginHistoryController.php">
    <UndefinedMagicMethod>
      <code><![CDATA[CustomerToUser::select( [
            'customer_to_users.last_login_date AS last_login_date',
            'customer_to_users.last_login_via AS last_login_via',
            'customer_to_users.id AS AS c2u_id',
            'user.id AS id',
            'user.username AS username',
            'user.email AS email',
            'cust.id AS cust_id',
            'cust.name AS cust_name'
        ] )]]></code>
      <code><![CDATA[User::findOrFail( $id )]]></code>
      <code><![CDATA[UserLoginHistory::select( [ 'user_logins.*', 'user.id AS user_id', 'cust.name AS cust_name' ] )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Http/Controllers/MacAddressController.php">
    <UndefinedMagicMethod>
      <code><![CDATA[MacAddress::selectRaw( "m.mac,
            ANY_VALUE(m.id) AS id,
            m.virtualinterfaceid,
            m.created_at,
            m.updated_at,
            vi.id AS viid,
            c.id AS customerid, c.abbreviatedName AS customer,
            s.name AS switchname, 
            GROUP_CONCAT( DISTINCT sp.name ) AS switchport,
            GROUP_CONCAT( DISTINCT ipv4.address ) AS ip4,
            GROUP_CONCAT( DISTINCT ipv6.address ) AS ip6,
            COALESCE( o.organisation, 'Unknown' ) AS organisation"
        )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Http/Controllers/NetworkInfoController.php">
    <MissingDocblockType>
      <code><![CDATA[protected function listGetData( ?int $id = null ): array]]></code>
      <code><![CDATA[public function doStore( Request $r ): bool|RedirectResponse]]></code>
      <code><![CDATA[public function doUpdate( Request $r, int $id ): bool|RedirectResponse]]></code>
    </MissingDocblockType>
    <UndefinedMagicMethod>
      <code><![CDATA[NetworkInfo::create( $r->all() )]]></code>
      <code><![CDATA[NetworkInfo::findOrFail( $id )]]></code>
      <code><![CDATA[NetworkInfo::findOrFail( $id )]]></code>
      <code><![CDATA[NetworkInfo::select( [ 'networkinfo.*', 'vlan.id AS vlan_id', 'vlan.name AS vlanname' ] )]]></code>
      <code><![CDATA[NetworkInfo::where( "vlanid" , $vlan->id  )]]></code>
      <code><![CDATA[Vlan::find( $r->vlanid )]]></code>
      <code><![CDATA[orderBy]]></code>
      <code><![CDATA[orderBy]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Http/Controllers/PatchPanel/PatchPanelController.php">
    <UndefinedMagicMethod>
      <code><![CDATA[Cabinet::select( [ 'id', 'name', 'locationid' ] )]]></code>
      <code><![CDATA[Cabinet::selectRaw( "id, concat( name, ' [', colocation, ']') AS name" )]]></code>
      <code><![CDATA[Cabinet::selectRaw( "id, concat( name, ' [', colocation, ']') AS name" )]]></code>
      <code><![CDATA[Location::select( [ 'id', 'name' ] )]]></code>
      <code><![CDATA[PatchPanel::create( $r->merge( [
                'location_notes' => clean( $r->location_notes ),
                'active' => true,
                'port_prefix' => $r->port_prefix ?? '',
            ])->all()
        )]]></code>
      <code><![CDATA[PatchPanel::where( 'active', $active )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Http/Controllers/PatchPanel/Port/DangerActionsController.php">
    <NoInterfaceProperties>
      <code><![CDATA[Auth::getUser()->username]]></code>
      <code><![CDATA[Auth::getUser()->username]]></code>
      <code><![CDATA[Auth::getUser()->username]]></code>
      <code><![CDATA[Auth::getUser()->username]]></code>
    </NoInterfaceProperties>
    <UndefinedMagicMethod>
      <code><![CDATA[PatchPanel::select( [ 'pp.id', 'pp.name' ] )]]></code>
      <code><![CDATA[PatchPanelPort::find( $r->port_id )]]></code>
      <code><![CDATA[PatchPanelPort::find( $r->slave_id )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Http/Controllers/PatchPanel/Port/FileController.php">
    <NoInterfaceProperties>
      <code><![CDATA[Auth::getUser()->username]]></code>
    </NoInterfaceProperties>
    <UndefinedMagicMethod>
      <code><![CDATA[PatchPanelPortFile::create( [
                'patch_panel_port_id'   => $ppp->id,
                'name'                  => $file->getClientOriginalName(),
                'type'                  => Storage::mimeType( $path ),
                'uploaded_at'           => now(),
                'uploaded_by'           => Auth::getUser()->username,
                'size'                  => Storage::size( $path ),
                'storage_location'      => $hash
            ] )]]></code>
      <code><![CDATA[User::find( Auth::id() )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Http/Controllers/PatchPanel/Port/HistoryFileController.php">
    <UndefinedMagicMethod>
      <code><![CDATA[User::find( Auth::id() )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Http/Controllers/PatchPanel/Port/LoaController.php">
    <UndefinedMagicMethod>
      <code><![CDATA[User::find( Auth::id() )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Http/Controllers/PatchPanel/Port/PortController.php">
    <InvalidArgument>
      <code><![CDATA[$chargeable]]></code>
      <code><![CDATA[$ppp->switchPort->switchid ?? null]]></code>
      <code><![CDATA[Customer::trafficking()->orderBy( 'name' )->get()]]></code>
    </InvalidArgument>
    <MissingDocblockType>
      <code><![CDATA[public function changeStatus( PatchPanelPort $ppp, int $status ): RedirectResponse]]></code>
      <code><![CDATA[public function setNotes( Request $r, PatchPanelPort $ppp ) : JsonResponse]]></code>
      <code><![CDATA[public function update( StorePatchPanelPortRequest $r, PatchPanelPort $ppp ): RedirectResponse]]></code>
    </MissingDocblockType>
    <UndefinedMagicMethod>
      <code><![CDATA[Cabinet::find( $cabinet )]]></code>
      <code><![CDATA[Location::find( $location )]]></code>
      <code><![CDATA[PatchPanelPort::find( $r->partner_port )]]></code>
      <code><![CDATA[PatchPanelPort::where( 'switch_port_id', $sp->id )]]></code>
      <code><![CDATA[SwitchPort::findOrFail( $r->switch_port_id )]]></code>
      <code><![CDATA[SwitchPort::select( 'vi.custid' )]]></code>
      <code><![CDATA[SwitchPort::selectRaw( 'sp.name, sp.type, sp.id' )]]></code>
      <code><![CDATA[Switcher::select( [ 'switch.id', 'switch.name' ] )]]></code>
      <code><![CDATA[orderBy]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Http/Controllers/PeeringManagerController.php">
    <ImplicitToStringCast>
      <code><![CDATA[now()]]></code>
    </ImplicitToStringCast>
    <InvalidOperand>
      <code><![CDATA[config( "identity.orgname" )]]></code>
    </InvalidOperand>
    <MissingDocblockType>
      <code><![CDATA[private function loadPeeringManager( Customer $cust, Customer $peer ): PeeringManager]]></code>
      <code><![CDATA[public function formEmailFrag( Request $r ): JsonResponse]]></code>
      <code><![CDATA[public function index(): View|RedirectResponse]]></code>
      <code><![CDATA[public function markPeering( int $custid, string $status ): RedirectResponse]]></code>
      <code><![CDATA[public function peeringNotes( Request $r ): JsonResponse]]></code>
      <code><![CDATA[public function sendPeeringEmail( PeeringManagerRequest $r ) : JsonResponse]]></code>
    </MissingDocblockType>
    <NoInterfaceProperties>
      <code><![CDATA[Auth::getUser()->custid]]></code>
      <code><![CDATA[Auth::getUser()->custid]]></code>
      <code><![CDATA[Auth::getUser()->custid]]></code>
      <code><![CDATA[Auth::getUser()->custid]]></code>
      <code><![CDATA[Auth::getUser()->custid]]></code>
      <code><![CDATA[Auth::getUser()->custid]]></code>
    </NoInterfaceProperties>
    <UndefinedMagicMethod>
      <code><![CDATA[Customer::find( $r->peerid )]]></code>
      <code><![CDATA[Customer::find( Auth::getUser()->custid )]]></code>
      <code><![CDATA[Customer::find( Auth::getUser()->custid )]]></code>
      <code><![CDATA[Customer::find( Auth::getUser()->custid )]]></code>
      <code><![CDATA[Customer::find( Auth::getUser()->custid )]]></code>
      <code><![CDATA[Customer::find( Auth::getUser()->custid )]]></code>
      <code><![CDATA[Customer::find( Auth::getUser()->custid )]]></code>
      <code><![CDATA[Customer::findOrFail( $custid )]]></code>
      <code><![CDATA[Customer::findOrFail( $r->peerid )]]></code>
      <code><![CDATA[Customer::findOrFail( $r->peerid )]]></code>
      <code><![CDATA[PeeringManager::create(
                [
                    'note'      => '',
                    'peered'    => false,
                    'rejected'  => false,
                ]
            )]]></code>
      <code><![CDATA[PeeringManager::where( 'custid' , $cust->id )]]></code>
      <code><![CDATA[User::find( Auth::id() )]]></code>
      <code><![CDATA[User::find( Auth::id() )]]></code>
      <code><![CDATA[orderBy]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Http/Controllers/PeeringMatrixController.php">
    <InvalidCast>
      <code><![CDATA[config( 'ixp.peering-matrix.lookback_days' )]]></code>
    </InvalidCast>
    <MissingDocblockType>
      <code><![CDATA[public function index( Request $r ): View|RedirectResponse]]></code>
    </MissingDocblockType>
    <TypeDoesNotContainType>
      <code><![CDATA[!is_int( $lookback_days )]]></code>
      <code><![CDATA[!is_int( $lookback_days ) || $lookback_days < 1]]></code>
      <code><![CDATA[!is_int( $lookback_days ) || $lookback_days < 1]]></code>
      <code><![CDATA[$lookback_days < 1]]></code>
    </TypeDoesNotContainType>
    <UndefinedMagicMethod>
      <code><![CDATA[BgpSession::selectRaw(
            'cs.shortname AS csshortname, 
                        cs.name AS csname, 
                        cs.autsys AS csautsys,
                        cs.activepeeringmatrix AS csactivepeeringmatrix,
                        cd.autsys AS cdautsys'
            )]]></code>
      <code><![CDATA[Vlan::find( $r->vlan )]]></code>
      <code><![CDATA[Vlan::select( [ 'cust.autsys', 'cust.name', 'cust.shortname', 'vli.rsclient', 'cust.activepeeringmatrix', 'cust.id' ] )]]></code>
      <code><![CDATA[Vlan::select( [ 'id', 'name' ] )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Http/Controllers/ProfileController.php">
    <MissingDocblockType>
      <code><![CDATA[public function updateMailingLists( Request $r ) : RedirectResponse]]></code>
      <code><![CDATA[public function updateNotificationPreference( NotificationRequest $r ) : RedirectResponse]]></code>
      <code><![CDATA[public function updatePassword( PasswordRequest $r  ): RedirectResponse]]></code>
      <code><![CDATA[public function updateProfile( ProfileRequest $r  ): RedirectResponse]]></code>
    </MissingDocblockType>
    <NoInterfaceProperties>
      <code><![CDATA[Auth::getUser()->prefs]]></code>
    </NoInterfaceProperties>
    <TypeDoesNotContainType>
      <code><![CDATA[Auth::getUser()->prefs[ 'notes' ][ 'global_notifs' ]]]></code>
    </TypeDoesNotContainType>
    <UndefinedMagicMethod>
      <code><![CDATA[UserRememberToken::where( 'user_id', $user->id )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Http/Controllers/RipeAtlas/MeasurementController.php">
    <MissingDocblockType>
      <code><![CDATA[StopAllMeasurementsJob::dispatchAfterResponse( $am->atlas_id );]]></code>
    </MissingDocblockType>
    <UndefinedMagicMethod>
      <code><![CDATA[AtlasMeasurement::select( [
            'cust_dest.*',
            'cust_source.*'
        ] )]]></code>
      <code><![CDATA[AtlasMeasurement::selectRaw(
            'atlas_measurements.*,
            cs.abbreviatedName as cs_name,
            cd.abbreviatedName as cd_name,
            atlas_results.id as atlas_result_id'
        )]]></code>
      <code><![CDATA[AtlasRun::find( $param->atlasrun )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Http/Controllers/RipeAtlas/ProbesController.php">
    <UndefinedMagicMethod>
      <code><![CDATA[AtlasProbe::select( [
            'atlas_probes.*',
            'cust.name'
        ] )]]></code>
      <code><![CDATA[Customer::find( $param->cust )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Http/Controllers/RipeAtlas/ResultController.php">
    <UndefinedMagicMethod>
      <code><![CDATA[AtlasResult::when( $id, function( Builder $q, $id ) {
            return $q->where( 'atlas_results.id', $id );
        } )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Http/Controllers/RipeAtlas/RunController.php">
    <InvalidOperand>
      <code><![CDATA[config( "ixp_fe.lang.customer.one" )]]></code>
    </InvalidOperand>
    <UndefinedMagicMethod>
      <code><![CDATA[AtlasRun::create( [
            'protocol'      => $r->protocol,
            'scheduled_at'  => $r->scheduled_at === AtlasRun::SCHEDULED_AT_NOW ? now() : new Carbon( $r->scheduled_date . $r->scheduled_time ),
            'vlan_id'       => $r->vlan_id
        ] )]]></code>
      <code><![CDATA[AtlasRun::select( [
            'atlas_runs.*',
            'vlan.name as vlan_name',
            DB::raw('COUNT( am.run_id ) as nb_am'),
            DB::raw('COUNT( am.atlas_create ) as nb_am_created'),
            DB::raw('COUNT( am.atlas_start ) as nb_am_started'),
            DB::raw('COUNT( am.atlas_stop ) as nb_am_stopped')
        ])]]></code>
      <code><![CDATA[get]]></code>
      <code><![CDATA[get]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Http/Controllers/RouterController.php">
    <InvalidArgument>
      <code><![CDATA[$router->protocol]]></code>
      <code><![CDATA[$router->type]]></code>
    </InvalidArgument>
    <MissingDocblockType>
      <code><![CDATA[public function delete( Router $router): RedirectResponse]]></code>
      <code><![CDATA[public function pause( Router $router): RedirectResponse]]></code>
      <code><![CDATA[public function resetUpdateTimestamps( Router $router): RedirectResponse]]></code>
      <code><![CDATA[public function resume( Router $router): RedirectResponse]]></code>
      <code><![CDATA[public function store( StoreRouter $r ): RedirectResponse]]></code>
      <code><![CDATA[public function update( StoreRouter $r, Router $router ): RedirectResponse]]></code>
    </MissingDocblockType>
    <UndefinedMagicMethod>
      <code><![CDATA[Router::create( $r->all() )]]></code>
      <code><![CDATA[Router::whereNotNull( 'api' )]]></code>
      <code><![CDATA[orderBy]]></code>
      <code><![CDATA[orderBy]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Http/Controllers/RsFilterController.php">
    <InvalidArgument>
      <code><![CDATA[$rsf->protocol ?? null]]></code>
    </InvalidArgument>
    <InvalidOperand>
      <code><![CDATA[config('ixp_fe.rs-filters.ttl' )]]></code>
    </InvalidOperand>
    <NoInterfaceProperties>
      <code><![CDATA[Auth::getUser()->username]]></code>
      <code><![CDATA[Auth::getUser()->username]]></code>
      <code><![CDATA[Auth::getUser()->username]]></code>
      <code><![CDATA[Auth::getUser()->username]]></code>
      <code><![CDATA[Auth::getUser()->username]]></code>
    </NoInterfaceProperties>
    <RedundantCondition>
      <code><![CDATA[(string)$rsf->peer_id]]></code>
      <code><![CDATA[(string)$rsf->vlan_id]]></code>
    </RedundantCondition>
    <TypeDoesNotContainNull>
      <code><![CDATA[null]]></code>
      <code><![CDATA[null]]></code>
    </TypeDoesNotContainNull>
    <UndefinedMagicMethod>
      <code><![CDATA[Customer::findOrFail( $r->custid )]]></code>
      <code><![CDATA[Customer::select( DB::raw('cust.id, cust.name, COUNT("route_server_filters_prod.id") as prod_rules') )]]></code>
      <code><![CDATA[IrrdbPrefix::where( 'customer_id', $cust->id )]]></code>
      <code><![CDATA[RouteServerFilter::make( array_merge( $r->except( [ 'enabled', 'order_by' ] ),
            [
                'enabled'       => true,
                'order_by'      => RouteServerFilter::where( 'customer_id', $cust->id )
                        ->get()->max( 'order_by' ) +1,
            ]
        ))]]></code>
      <code><![CDATA[RouteServerFilter::where( "customer_id" , $cust->id )]]></code>
      <code><![CDATA[RouteServerFilter::where( "customer_id", $rsf->customer_id )]]></code>
      <code><![CDATA[RouteServerFilter::where( 'customer_id', $cust->id )]]></code>
      <code><![CDATA[RouteServerFilterProd::where( "customer_id" , $cust->id )]]></code>
      <code><![CDATA[Vlan::select( [ 'vlan.id AS id', 'vlan.name' ] )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Http/Controllers/SearchController.php">
    <MissingDocblockType>
      <code><![CDATA[$results[ $vli->virtualInterface->custid ]]]></code>
    </MissingDocblockType>
    <UndefinedMagicMethod>
      <code><![CDATA[Contact::where( 'email', $search )]]></code>
      <code><![CDATA[Customer::select( 'cust.*' )]]></code>
      <code><![CDATA[Customer::where( 'peeringmacro', $search )]]></code>
      <code><![CDATA[Customer::where('autsys', $matches[1] )]]></code>
      <code><![CDATA[PatchPanelPort::find( $matches[1] )]]></code>
      <code><![CDATA[PatchPanelPort::where( function( $query ) use( $matches ){
                    $query->where( 'colo_circuit_ref', 'LIKE', '%' . $matches[1] . '%'  )
                        ->orWhere( 'colo_billing_ref', 'LIKE', '%' . $matches[1] . '%' );
                } )]]></code>
      <code><![CDATA[User::where( 'email', $search )]]></code>
      <code><![CDATA[User::where( 'username', 'LIKE' , '%' . $matches[1] . '%' )]]></code>
      <code><![CDATA[VirtualInterface::select( 'virtualinterface.*' )]]></code>
      <code><![CDATA[VlanInterface::select( 'vlaninterface.*' )]]></code>
      <code><![CDATA[VlanInterface::select( 'vlaninterface.*' )]]></code>
      <code><![CDATA[VlanInterface::select( 'vlaninterface.*' )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Http/Controllers/Services/Grapher.php">
    <MissingDocblockType>
      <code><![CDATA[private function graph(): Graph]]></code>
    </MissingDocblockType>
    <PossiblyInvalidDocblockTag>
      <code><![CDATA[@var GrapherService      $grapher]]></code>
      <code><![CDATA[@var Request             $request]]></code>
    </PossiblyInvalidDocblockTag>
  </file>
  <file src="app/Http/Controllers/Services/LookingGlass.php">
    <MissingDocblockType>
      <code><![CDATA[private function addCommonParams( View $view ): View]]></code>
      <code><![CDATA[private function lg(): LookingGlassContract]]></code>
      <code><![CDATA[public function bgpSummary(string $handle ): View]]></code>
      <code><![CDATA[public function bgpSummaryApi( string $handle ): Response]]></code>
      <code><![CDATA[public function index(): View]]></code>
      <code><![CDATA[public function routeExport( string $handle, string $network, string $mask, string $protocol ): View]]></code>
      <code><![CDATA[public function routeProtocol( string $handle, string $network, string $mask, string $protocol ): View]]></code>
      <code><![CDATA[public function routeSearch( string $handle ): View]]></code>
      <code><![CDATA[public function routeTable( string $handle, string $network, string $mask, string $table ): View]]></code>
      <code><![CDATA[public function routesForExport( string $handle, string $protocol ): View]]></code>
      <code><![CDATA[public function routesForProtocol( string $handle, string $protocol )]]></code>
      <code><![CDATA[public function routesForTable( string $handle, string $table )]]></code>
      <code><![CDATA[public function status( string $handle ): Response]]></code>
    </MissingDocblockType>
    <NoInterfaceProperties>
      <code><![CDATA[Auth::getUser()->custid]]></code>
      <code><![CDATA[Auth::getUser()->custid]]></code>
    </NoInterfaceProperties>
    <UndefinedMagicMethod>
      <code><![CDATA[Customer::find( Auth::getUser()->custid )]]></code>
      <code><![CDATA[Customer::find( Auth::getUser()->custid )]]></code>
      <code><![CDATA[User::find( Auth::id() )]]></code>
      <code><![CDATA[User::find( Auth::id() )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Http/Controllers/SettingsController.php">
    <MissingDocblockType>
      <code><![CDATA[public function update( Request $request ): array]]></code>
    </MissingDocblockType>
  </file>
  <file src="app/Http/Controllers/StatisticsController.php">
    <MissingDocblockType>
      <code><![CDATA[public function infrastructure( ?Infrastructure $infra = null, string $category = Graph::CATEGORY_BITS ) : View]]></code>
      <code><![CDATA[public function ixp( string $category = Graph::CATEGORY_BITS ) : View]]></code>
      <code><![CDATA[public function leagueTable( Request $r ): View]]></code>
      <code><![CDATA[public function location( Location $location = null, string $category = Graph::CATEGORY_BITS ) : View]]></code>
      <code><![CDATA[public function p2pTable( Request $r ): View|RedirectResponse]]></code>
      <code><![CDATA[public function switch( Switcher $switch = null, string $category = Graph::CATEGORY_BITS ) : View]]></code>
      <code><![CDATA[public function vlan( Vlan $vlan = null, string $protocol = Graph::PROTOCOL_IPV4, string $category = Graph::CATEGORY_BITS ) : View]]></code>
    </MissingDocblockType>
    <NoInterfaceProperties>
      <code><![CDATA[Auth::getUser()->customer]]></code>
      <code><![CDATA[Auth::user()->custid]]></code>
      <code><![CDATA[Auth::user()->customer]]></code>
    </NoInterfaceProperties>
    <RedundantCondition>
      <code><![CDATA[$vlan]]></code>
    </RedundantCondition>
    <TypeDoesNotContainNull>
      <code><![CDATA[false]]></code>
    </TypeDoesNotContainNull>
    <TypeDoesNotContainType>
      <code><![CDATA[$vlan]]></code>
      <code><![CDATA[$vlan]]></code>
    </TypeDoesNotContainType>
    <UndefinedInterfaceMethod>
      <code><![CDATA[isSuperUser]]></code>
    </UndefinedInterfaceMethod>
    <UndefinedMagicMethod>
      <code><![CDATA[Customer::findOrFail( $typeid )]]></code>
      <code><![CDATA[Infrastructure::find( $r->infra )]]></code>
      <code><![CDATA[Infrastructure::orderBy( 'name' )]]></code>
      <code><![CDATA[Infrastructure::select( [ 'name', 'id' ] )]]></code>
      <code><![CDATA[Location::orderBy( 'name' )]]></code>
      <code><![CDATA[P2pDailyStats::select('day')]]></code>
      <code><![CDATA[PhysicalInterface::findOrFail( $typeid )]]></code>
      <code><![CDATA[Switcher::where( 'active', true )]]></code>
      <code><![CDATA[TrafficDailyPhysInt::select( [ 'day' ] )]]></code>
      <code><![CDATA[VirtualInterface::findOrFail( $typeid )]]></code>
      <code><![CDATA[Vlan::find( $r->vlan )]]></code>
      <code><![CDATA[Vlan::find( $r->vlan )]]></code>
      <code><![CDATA[VlanInterface::findOrFail($request->dvli)]]></code>
      <code><![CDATA[VlanInterface::findOrFail($request->svli)]]></code>
      <code><![CDATA[VlanInterface::select( [ 'vli.*' ] )]]></code>
      <code><![CDATA[get]]></code>
      <code><![CDATA[get]]></code>
      <code><![CDATA[get]]></code>
      <code><![CDATA[orderBy]]></code>
      <code><![CDATA[orderBy]]></code>
      <code><![CDATA[where]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Http/Controllers/Switches/SwitchController.php">
    <ImplicitToStringCast>
      <code><![CDATA[now()]]></code>
    </ImplicitToStringCast>
    <MissingDocblockType>
      <code><![CDATA[private function extraAttributes( Request $r ): void]]></code>
      <code><![CDATA[public function configuration( Request $r ) : View]]></code>
      <code><![CDATA[public function doUpdate( Request $r, int $id ): bool|RedirectResponse]]></code>
    </MissingDocblockType>
    <RedundantCondition>
      <code><![CDATA[User::AUTH_CUSTADMIN]]></code>
      <code><![CDATA[User::AUTH_CUSTUSER]]></code>
    </RedundantCondition>
    <UndefinedMagicMethod>
      <code><![CDATA[Infrastructure::find( $param->infra )]]></code>
      <code><![CDATA[Infrastructure::find( $r->infra )]]></code>
      <code><![CDATA[Infrastructure::find( $switch->infrastructure )]]></code>
      <code><![CDATA[Infrastructure::orderBy( 'name' )]]></code>
      <code><![CDATA[Infrastructure::orderBy( 'name' )]]></code>
      <code><![CDATA[Infrastructure::orderBy( 'name' )]]></code>
      <code><![CDATA[Infrastructure::orderBy( 'name' )]]></code>
      <code><![CDATA[Location::find( $r->location )]]></code>
      <code><![CDATA[Location::find( $switch->cabinet->locationid )]]></code>
      <code><![CDATA[Location::orderBy( 'name' )]]></code>
      <code><![CDATA[PhysicalInterface::selectRaw( 'DISTINCT physicalinterface.rate_limit AS rate_limit' )]]></code>
      <code><![CDATA[PhysicalInterface::selectRaw( 'DISTINCT physicalinterface.speed AS speed' )]]></code>
      <code><![CDATA[SwitchPort::select( [
                'sp.id AS id', 'sp.name AS name', 'sp.type AS porttype',
                'pi.speed AS speed', 'pi.duplex AS duplex',
                'c.name AS custname'
            ] )]]></code>
      <code><![CDATA[Switcher::create( $r->all() )]]></code>
      <code><![CDATA[Switcher::find( $r->switch )]]></code>
      <code><![CDATA[Switcher::findOrFail( $id )]]></code>
      <code><![CDATA[Switcher::findOrFail( $id )]]></code>
      <code><![CDATA[Switcher::orderBy( 'name' )]]></code>
      <code><![CDATA[Switcher::select( [
            'switch.*',
            'i.name AS infrastructure',
            'v.id AS vendorid', 'v.name AS vendor',
            'c.id AS cabinetid', 'c.name AS cabinet'
        ] )]]></code>
      <code><![CDATA[Switcher::where( 'asn', $r->asn )]]></code>
      <code><![CDATA[Switcher::where('asn', $r->asn )]]></code>
      <code><![CDATA[Vendor::orderBy( 'name' )]]></code>
      <code><![CDATA[Vendor::orderBy( 'name' )]]></code>
      <code><![CDATA[Vendor::orderBy( 'name' )]]></code>
      <code><![CDATA[Vendor::where('name', $vendor )]]></code>
      <code><![CDATA[Vlan::find( $r->vlan )]]></code>
      <code><![CDATA[Vlan::orderBy( 'name' )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Http/Controllers/Switches/SwitchPortController.php">
    <MissingDocblockType>
      <code><![CDATA[public function unusedOptics() : View]]></code>
    </MissingDocblockType>
    <UndefinedMagicMethod>
      <code><![CDATA[SwitchPort::create( [
                'switchid'  => $r->switchid,
                'type'      => $r->input('portType' . $i ),
                'name'      => $r->input('portName' . $i ),
                'active'    => true,
            ] )]]></code>
      <code><![CDATA[SwitchPort::findOrFail( $id )]]></code>
      <code><![CDATA[SwitchPort::findOrFail( $id )]]></code>
      <code><![CDATA[SwitchPort::findOrFail( $id )]]></code>
      <code><![CDATA[SwitchPort::findOrFail( $id )]]></code>
      <code><![CDATA[SwitchPort::findOrFail( $id )]]></code>
      <code><![CDATA[SwitchPort::select( [
                'sp.*',
                's.id AS switchid'
            ] )]]></code>
      <code><![CDATA[SwitchPort::select( [
                'sp.ifIndex AS ifIndex', 'sp.ifName AS ifName', 'sp.type AS type', 'sp.mauType AS mauType', 'sp.mauState AS mauState', 'sp.mauJacktype AS mauJacktype',
                's.id AS switchid', 's.name AS switchname'
            ] )]]></code>
      <code><![CDATA[SwitchPort::select( [
            'sp.*',
            'c.name AS custname', 'c.id AS custid',
            's.id AS switchid', 's.name AS switch'
        ] )]]></code>
      <code><![CDATA[SwitchPort::select( [
            'sp.*',
            's.id AS switchid', 's.name AS switchname'
        ] )]]></code>
      <code><![CDATA[SwitchPort::selectRaw(
                'switchport.mauType AS mauType,
                COUNT( switchport.mauType ) AS cnt'
            )]]></code>
      <code><![CDATA[Switcher::find( $param->session()->get( "switch-port-list" ) )]]></code>
      <code><![CDATA[Switcher::find( $param->switch )]]></code>
      <code><![CDATA[Switcher::orderBy( 'name' )]]></code>
      <code><![CDATA[Switcher::orderBy( 'name' )]]></code>
      <code><![CDATA[Switcher::orderBy( 'name' )]]></code>
      <code><![CDATA[Switcher::orderBy( 'name' )]]></code>
      <code><![CDATA[Switcher::orderBy( 'name' )]]></code>
      <code><![CDATA[Switcher::where( 'mauSupported', true )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Http/Controllers/User/CustomerToUserController.php">
    <NoInterfaceProperties>
      <code><![CDATA[Auth::getUser()->username]]></code>
      <code><![CDATA[Auth::getUser()->username]]></code>
      <code><![CDATA[Auth::user()->customer]]></code>
    </NoInterfaceProperties>
    <RedundantCondition>
      <code><![CDATA[$disassociatedUser->customers()]]></code>
    </RedundantCondition>
    <UndefinedMagicMethod>
      <code><![CDATA[Customer::find( $r->cust )]]></code>
      <code><![CDATA[Customer::orderBy( 'name' )]]></code>
      <code><![CDATA[CustomerToUser::findOrFail( $r->id )]]></code>
      <code><![CDATA[User::where( 'email', strtolower( trim( $email ) ) )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Http/Controllers/User/User2FAController.php">
    <RedundantCondition>
      <code><![CDATA[$user?->user2FA]]></code>
    </RedundantCondition>
    <TypeDoesNotContainNull>
      <code><![CDATA[$user]]></code>
    </TypeDoesNotContainNull>
    <UndefinedMagicMethod>
      <code><![CDATA[User2FA::create([
                'user_id'   => $user->id,
                'enabled'   => false,
                'secret'    => $google2fa->generateSecretKey( 32 ),
            ])]]></code>
      <code><![CDATA[UserRememberToken::where( 'token', $recaller->token() )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Http/Controllers/User/UserController.php">
    <InvalidArgument>
      <code><![CDATA[$c2u->privs]]></code>
      <code><![CDATA[$c2u->privs]]></code>
    </InvalidArgument>
    <MissingDocblockType>
      <code><![CDATA[if( !( $c2u = $u->customerToUser()->where( 'customer_id', Auth::user()->custid  )->first() ) ) {
                abort(404, 'UserToCustomer not found');
            }]]></code>
    </MissingDocblockType>
    <NoInterfaceProperties>
      <code><![CDATA[Auth::user()->custid]]></code>
      <code><![CDATA[Auth::user()->custid]]></code>
      <code><![CDATA[Auth::user()->custid]]></code>
      <code><![CDATA[Auth::user()->username]]></code>
      <code><![CDATA[Auth::user()->username]]></code>
    </NoInterfaceProperties>
    <RedundantFunctionCall>
      <code><![CDATA[sprintf]]></code>
    </RedundantFunctionCall>
    <UndefinedMagicMethod>
      <code><![CDATA[Customer::find( $r->custid )]]></code>
      <code><![CDATA[Customer::find( $r->custid )]]></code>
      <code><![CDATA[Customer::find( $r->custid )]]></code>
      <code><![CDATA[Customer::orderBy( 'name' )]]></code>
      <code><![CDATA[Customer::orderBy( 'name' )]]></code>
      <code><![CDATA[CustomerToUser::selectRaw( 'user_id, COUNT( id ) AS nbC2U' )]]></code>
      <code><![CDATA[User::selectRaw(
            'u.id as id, 
                        u.name AS name,
                        u.username as username, 
                        u.email as email,
                        u.created_at as created,
                        u.disabled as disabled, 
                        u.peeringdb_id as peeringdb_id,
                        u.updated_at AS lastupdated,
                        u.creator as creator, 
                        c.id as custid, 
                        c.name as customer,
                        COUNT( c2u.id ) as nbC2U,
                        MAX( c2u.privs ) as privileges,
                        c2u.id as c2uid,
                        u2fa.enabled as u2fa_enabled,
                        u2fa.id as psid ' )]]></code>
      <code><![CDATA[User::where( 'email',  $r->email )]]></code>
      <code><![CDATA[orderBy]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Http/Controllers/User/UserRememberTokenController.php">
    <UndefinedMagicMethod>
      <code><![CDATA[UserRememberToken::where( 'user_id', request()->user()->id )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Http/Controllers/Utils/IxfCompareController.php">
    <InvalidArgument>
      <code><![CDATA[array_keys( config('ixp_fe.ixfsources'))]]></code>
      <code><![CDATA[array_keys( config('ixp_fe.ixfsources'))]]></code>
    </InvalidArgument>
    <InvalidArrayAccess>
      <code><![CDATA[$sources[ $r->sourcea_dd ]]]></code>
    </InvalidArrayAccess>
  </file>
  <file src="app/Http/Controllers/VendorController.php">
    <UndefinedMagicMethod>
      <code><![CDATA[Vendor::create( $r->all() )]]></code>
      <code><![CDATA[Vendor::findOrFail( $id )]]></code>
      <code><![CDATA[Vendor::findOrFail( $id )]]></code>
      <code><![CDATA[Vendor::when( $id , function( Builder $q, $id ) {
            return $q->where('id', $id );
        } )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Http/Controllers/VlanController.php">
    <ImplementedParamTypeMismatch>
      <code><![CDATA[$id]]></code>
    </ImplementedParamTypeMismatch>
    <UndefinedMagicMethod>
      <code><![CDATA[Infrastructure::orderBy( 'name' )]]></code>
      <code><![CDATA[Infrastructure::orderBy( 'name' )]]></code>
      <code><![CDATA[Vlan::create( $r->all() )]]></code>
      <code><![CDATA[Vlan::findOrFail( $id )]]></code>
      <code><![CDATA[Vlan::findOrFail( $id )]]></code>
      <code><![CDATA[Vlan::select( [ 'vlan.*', 'i.shortname AS infrastructure_name' ] )]]></code>
      <code><![CDATA[Vlan::where( 'infrastructureid', $r->infrastructureid )]]></code>
      <code><![CDATA[Vlan::where( 'private', 1 )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Http/Controllers/WeatherMapController.php">
    <InvalidArrayAccess>
      <code><![CDATA[config( 'ixp_tools.weathermap' )[ $id ]]]></code>
      <code><![CDATA[config( 'ixp_tools.weathermap' )[ $id ]]]></code>
    </InvalidArrayAccess>
    <TypeDoesNotContainType>
      <code><![CDATA[!is_numeric( $id )]]></code>
    </TypeDoesNotContainType>
  </file>
  <file src="app/Http/Middleware/ApiAuthenticate.php">
    <MissingDocblockType>
      <code><![CDATA[public function handle( Request $r, Closure $next )]]></code>
    </MissingDocblockType>
    <UndefinedMagicMethod>
      <code><![CDATA[ApiKey::where( 'apiKey', $apikey )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Http/Middleware/ApiMaybeAuthenticate.php">
    <MissingDocblockType>
      <code><![CDATA[public function handle( Request $r, Closure $next )]]></code>
    </MissingDocblockType>
    <UndefinedMagicMethod>
      <code><![CDATA[ApiKey::where( 'apiKey', $apikey )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Http/Middleware/Authenticate.php">
    <UndefinedMagicMethod>
      <code><![CDATA[CustomerToUser::where( [ 'user_id' => Auth::id()  ] )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Http/Middleware/Google2FA.php">
    <NoInterfaceProperties>
      <code><![CDATA[Auth::getUser()->user2FA]]></code>
      <code><![CDATA[Auth::getUser()->user2FA]]></code>
    </NoInterfaceProperties>
  </file>
  <file src="app/Http/Middleware/RsPrefixes.php">
    <InvalidCast>
      <code><![CDATA[config( 'ixp_fe.rs-prefixes.access' )]]></code>
      <code><![CDATA[config( 'ixp_fe.rs-prefixes.access' )]]></code>
      <code><![CDATA[config( 'ixp_fe.rs-prefixes.access' )]]></code>
    </InvalidCast>
    <MissingDocblockType>
      <code><![CDATA[public function handle( Request $r, Closure $next )]]></code>
    </MissingDocblockType>
    <TypeDoesNotContainType>
      <code><![CDATA[(int)config( 'ixp_fe.rs-prefixes.access' ) === User::AUTH_PUBLIC]]></code>
      <code><![CDATA[(int)config( 'ixp_fe.rs-prefixes.access' ) === User::AUTH_PUBLIC]]></code>
    </TypeDoesNotContainType>
  </file>
  <file src="app/Http/Middleware/Services/LookingGlass.php">
    <MissingDocblockType>
      <code><![CDATA[public function handle( Request $r, Closure $next )]]></code>
    </MissingDocblockType>
    <UndefinedMagicMethod>
      <code><![CDATA[first]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Http/Requests/CoreBundle/Store.php">
    <UndefinedMagicMethod>
      <code><![CDATA[SwitchPort::find( $detail[ "hidden-sp-" . $side ] )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Http/Requests/Customer/BillingInformation.php">
    <InvalidArgument>
      <code><![CDATA[array_values( Countries::getListForSelect( 'iso_3166_2' ) )]]></code>
      <code><![CDATA[array_values( Countries::getListForSelect( 'iso_3166_2' ) )]]></code>
    </InvalidArgument>
  </file>
  <file src="app/Http/Requests/Customer/Store.php">
    <UndefinedMagicMethod>
      <code><![CDATA[Customer::find( $this->reseller )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Http/Requests/Dashboard/BillingDetailsRequest.php">
    <InvalidArgument>
      <code><![CDATA[array_values( Countries::getListForSelect( 'iso_3166_2' ) )]]></code>
    </InvalidArgument>
  </file>
  <file src="app/Http/Requests/Irrdb.php">
    <MissingDocblockType>
      <code><![CDATA[public function withValidator(): void]]></code>
    </MissingDocblockType>
  </file>
  <file src="app/Http/Requests/MovePatchPanelPort.php">
    <UndefinedMagicMethod>
      <code><![CDATA[PatchPanelPort::find( $this->port_id )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Http/Requests/Profile/Password.php">
    <NoInterfaceProperties>
      <code><![CDATA[Auth::getUser()->password]]></code>
    </NoInterfaceProperties>
  </file>
  <file src="app/Http/Requests/Profile/Profile.php">
    <NoInterfaceProperties>
      <code><![CDATA[Auth::getUser()->password]]></code>
    </NoInterfaceProperties>
  </file>
  <file src="app/Http/Requests/RouteServerFilter/Store.php">
    <UndefinedMagicMethod>
      <code><![CDATA[Customer::find( $value )]]></code>
      <code><![CDATA[Vlan::find( $value )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Http/Requests/User/CheckEmail.php">
    <UndefinedMagicMethod>
      <code><![CDATA[User::leftJoin( 'customer_to_users AS c2u', 'c2u.user_id', 'user.id' )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Http/Requests/User/CustomerToUser/Store.php">
    <UndefinedMagicMethod>
      <code><![CDATA[Customer::find( $this->customer_id )]]></code>
      <code><![CDATA[CustomerToUser::where( 'customer_id', $this->cust->id )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Http/Requests/User/Delete.php">
    <NoInterfaceProperties>
      <code><![CDATA[Auth::user()->username]]></code>
    </NoInterfaceProperties>
    <UndefinedMagicMethod>
      <code><![CDATA[CustomerToUser::where( 'customer_id', $us->custid )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Http/Requests/User/Store.php">
    <RedundantCondition>
      <code><![CDATA[$isSuperUser]]></code>
    </RedundantCondition>
    <UndefinedMagicMethod>
      <code><![CDATA[Customer::find( $this->custid )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Http/Requests/User/Update.php">
    <RedundantCondition>
      <code><![CDATA[!$isSuperUser]]></code>
      <code><![CDATA[!$isSuperUser]]></code>
      <code><![CDATA[$us->customer]]></code>
    </RedundantCondition>
    <TypeDoesNotContainType>
      <code><![CDATA[$isSuperUser]]></code>
      <code><![CDATA[$isSuperUser]]></code>
    </TypeDoesNotContainType>
    <UndefinedMagicMethod>
      <code><![CDATA[Customer::find( $this->custid )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Jobs/FetchFilteredPrefixesForCustomer.php">
    <MissingDocblockType>
      <code><![CDATA[private function queryRouteServer( LookingGlass $lg, VlanInterface $vli, int $ipproto ): void]]></code>
    </MissingDocblockType>
    <UndefinedMagicMethod>
      <code><![CDATA[Router::where( 'vlan_id', $vli->vlan->id )]]></code>
      <code><![CDATA[VlanInterface::select('vli.*')]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Jobs/RipeAtlas/CompleteRequests.php">
    <MissingDocblockType>
      <code><![CDATA[public function handle()]]></code>
    </MissingDocblockType>
  </file>
  <file src="app/Jobs/RipeAtlas/CreateMeasurements.php">
    <MissingDocblockType>
      <code><![CDATA[public function handle(): void]]></code>
    </MissingDocblockType>
    <UndefinedMagicMethod>
      <code><![CDATA[AtlasMeasurement::create( [ 'run_id' => $this->atlasRun->id, 'cust_source' => $src->id, 'cust_dest' => $dest->id ] )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Jobs/RipeAtlas/RunMeasurements.php">
    <MissingDocblockType>
      <code><![CDATA[public function handle(): void]]></code>
    </MissingDocblockType>
    <UndefinedMagicMethod>
      <code><![CDATA[forCustomer]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Jobs/RipeAtlas/StopAllMeasurements.php">
    <MissingDocblockType>
      <code><![CDATA[public function handle(): void]]></code>
    </MissingDocblockType>
  </file>
  <file src="app/Jobs/RipeAtlas/UpdateMeasurements.php">
    <MissingDocblockType>
      <code><![CDATA[public function handle(): int]]></code>
    </MissingDocblockType>
  </file>
  <file src="app/Jobs/RipeAtlas/UpdateProbes.php">
    <MissingDocblockType>
      <code><![CDATA[public function handle(): void]]></code>
    </MissingDocblockType>
    <UndefinedMagicMethod>
      <code><![CDATA[AtlasProbe::create([
                            'cust_id'       => $this->customer->id,
                            'atlas_id'      => $probe->id,
                            'v4_enabled'    => false,
                            'v6_enabled'    => false,
                        ])]]></code>
      <code><![CDATA[forAtlas]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Jobs/UpdateIrrdb.php">
    <MissingDocblockType>
      <code><![CDATA[public function handle(): void]]></code>
    </MissingDocblockType>
  </file>
  <file src="app/Listeners/Auth/Google2FALoginSucceeded.php">
    <UndefinedMagicMethod>
      <code><![CDATA[UserRememberToken::where( 'token',  $recaller->token() )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Listeners/Auth/LoginSuccessful.php">
    <UndefinedMagicMethod>
      <code><![CDATA[UserLoginHistory::create( [
                    'ip'                    => ixp_get_client_ip(),
                    'at'                    => now(),
                    'via'                   => Auth::viaRemember() ?  'RememberMe' : 'Login',
                    'customer_to_user_id'   => $c2u->id,
                ] )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Listeners/Customer/Note/EmailOnChange.php">
    <MissingDocblockType>
      <code><![CDATA[if( isset( $user->prefs[ 'notes' ][ 'global_notifs' ] ) && $user->prefs[ 'notes' ][ 'global_notifs' ] === 'none' ){
                    continue;
                }]]></code>
    </MissingDocblockType>
    <UndefinedMagicMethod>
      <code><![CDATA[CustomerToUser::from( 'customer_to_users AS c2u' )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Listeners/RipeAtlas/MeasurementComplete.php">
    <RedundantCondition>
      <code><![CDATA[$r = $am->atlasResult()]]></code>
    </RedundantCondition>
  </file>
  <file src="app/Mail/Auth/ForgotPassword.php">
    <InvalidOperand>
      <code><![CDATA[config('identity.sitename' )]]></code>
    </InvalidOperand>
  </file>
  <file src="app/Mail/Auth/ForgotUsername.php">
    <InvalidDocblock>
      <code><![CDATA[public $users;]]></code>
    </InvalidDocblock>
    <InvalidOperand>
      <code><![CDATA[config('identity.sitename' )]]></code>
    </InvalidOperand>
  </file>
  <file src="app/Mail/Auth/PasswordReset.php">
    <InvalidOperand>
      <code><![CDATA[config('identity.sitename' )]]></code>
    </InvalidOperand>
  </file>
  <file src="app/Mail/Customer/Note/Changed.php">
    <RedundantCondition>
      <code><![CDATA[$this->event->note()]]></code>
    </RedundantCondition>
  </file>
  <file src="app/Mail/PeeringManager/RequestPeeringManager.php">
    <MissingDocblockType>
      <code><![CDATA[public function checkIfSendable( bool $sendtome ): void]]></code>
    </MissingDocblockType>
    <RedundantCondition>
      <code><![CDATA[!filter_var( config( "ixp.peering_manager.testemail" ) , FILTER_VALIDATE_EMAIL )]]></code>
    </RedundantCondition>
    <UndefinedMagicMethod>
      <code><![CDATA[User::find( Auth::id() )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Mail/User/UserAddedToCustomer.php">
    <InvalidOperand>
      <code><![CDATA[config('identity.sitename' )]]></code>
    </InvalidOperand>
  </file>
  <file src="app/Mail/User/UserCreated.php">
    <InvalidOperand>
      <code><![CDATA[config('identity.sitename' )]]></code>
    </InvalidOperand>
  </file>
  <file src="app/Models/Aggregators/BgpSessionDataAggregator.php">
    <LessSpecificImplementedReturnType>
      <code><![CDATA[Builder|BgpSessionDataAggregator]]></code>
      <code><![CDATA[Builder|BgpSessionDataAggregator]]></code>
      <code><![CDATA[Builder|BgpSessionDataAggregator]]></code>
    </LessSpecificImplementedReturnType>
    <MissingDocblockType>
      <code><![CDATA[public static function getPeers( ?int $vlan = null, int $protocol = 6, ?int $asn = null, bool $forceDb = false ): array|string]]></code>
    </MissingDocblockType>
    <UndefinedMagicMethod>
      <code><![CDATA[Vlan::find( $vlan )]]></code>
      <code><![CDATA[self::selectRaw(
            'bs.*, srcip.*, dstip.*,
            vlis.virtualinterfaceid as visid, vlid.virtualinterfaceid as vidid,
            cs.shortname AS csshortname, cs.name AS csname, cs.autsys AS csautsys,
            cd.shortname AS cdshortname, cd.name AS cdname, cd.autsys AS cdautsys,
            vlan.id AS vlanid, vlan.name AS vlanname, vlan.number AS vlantag,
            COUNT( bs.packetcount ) AS packetcount'
        )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Models/Aggregators/ConsoleServerConnectionAggregatore.php">
    <LessSpecificImplementedReturnType>
      <code><![CDATA[Builder|ConsoleServerConnectionAggregatore]]></code>
      <code><![CDATA[Builder|ConsoleServerConnectionAggregatore]]></code>
      <code><![CDATA[Builder|ConsoleServerConnectionAggregatore]]></code>
    </LessSpecificImplementedReturnType>
    <UndefinedMagicMethod>
      <code><![CDATA[self::select(
            [
                'csc.*',
                'c.name AS customer', 'c.id AS customerid',
                'cs.id  AS consoleserver_id', 'cs.name AS consoleserver_name'
            ]
        )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Models/Aggregators/ContactGroupAggregator.php">
    <LessSpecificImplementedReturnType>
      <code><![CDATA[Builder|ContactGroupAggregator]]></code>
      <code><![CDATA[Builder|ContactGroupAggregator]]></code>
      <code><![CDATA[Builder|ContactGroupAggregator]]></code>
    </LessSpecificImplementedReturnType>
    <UndefinedMagicMethod>
      <code><![CDATA[self::when( $cid , function( Builder $q, $cid ) {
            return $q->leftJoin( 'contact_to_group', function( $join ) use( $cid ) {
                $join->on( 'contact_group.id', 'contact_to_group.contact_group_id')
                    ->where('contact_to_group.contact_id', $cid );
            });
        })]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Models/Aggregators/CustomerAggregator.php">
    <LessSpecificImplementedReturnType>
      <code><![CDATA[Builder|CustomerAggregator]]></code>
      <code><![CDATA[Builder|CustomerAggregator]]></code>
      <code><![CDATA[Builder|CustomerAggregator]]></code>
    </LessSpecificImplementedReturnType>
    <MissingDocblockType>
      <code><![CDATA[$cb->deleteObject();]]></code>
      <code><![CDATA[public static function deleteObject( Customer $cust ): bool]]></code>
    </MissingDocblockType>
    <UndefinedMagicMethod>
      <code><![CDATA[CoreBundle::select( 'cb.*' )]]></code>
      <code><![CDATA[PeeringManager::selectRaw(
            'pm.id AS id, c.id AS custid, p.id AS peerid,
                pm.email_last_sent AS email_last_sent, pm.emails_sent AS emails_sent,
                pm.peered AS peered, pm.rejected AS rejected, pm.notes AS notes,
                pm.created_at AS created_at, pm.updated_at AS updated_at'
        )]]></code>
      <code><![CDATA[Vlan::select( ['id', 'number'] )]]></code>
      <code><![CDATA[self::select( [ 'c.id', 'c.name' ] )]]></code>
      <code><![CDATA[self::select('cust.*' )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Models/Aggregators/IpAddressAggregator.php">
    <MissingDocblockType>
      <code><![CDATA[public static function bulkAdd( array $addresses, Vlan $vlan, $model, bool $skip = true ): array]]></code>
    </MissingDocblockType>
  </file>
  <file src="app/Models/Aggregators/IrrdbAggregator.php">
    <UndefinedMagicMethod>
      <code><![CDATA[$model::select( [ 'id', $field , 'first_seen', 'last_seen' ] )]]></code>
      <code><![CDATA[$model::select( [ 'id', $field , 'first_seen', 'last_seen' ] )]]></code>
      <code><![CDATA[Customer::find( $cust )]]></code>
      <code><![CDATA[Customer::find( $cust )]]></code>
      <code><![CDATA[IrrdbAsn::select('asn')]]></code>
      <code><![CDATA[IrrdbPrefix::select('prefix')]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Models/Aggregators/PatchPanelPortAggregator.php">
    <LessSpecificImplementedReturnType>
      <code><![CDATA[Builder|PatchPanelPortAggregator]]></code>
      <code><![CDATA[Builder|PatchPanelPortAggregator]]></code>
      <code><![CDATA[Builder|PatchPanelPortAggregator]]></code>
    </LessSpecificImplementedReturnType>
    <MissingDocblockType>
      <code><![CDATA[$result[ $ppp->id ]]]></code>
    </MissingDocblockType>
    <UndefinedMagicMethod>
      <code><![CDATA[PatchPanelPort::selectRaw(
            'ppp.id, ppp.number, 
            ppp.patch_panel_id, ppp.duplex_master_id,
            GROUP_CONCAT( pp.port_prefix, ppp.number ) AS name' )]]></code>
      <code><![CDATA[self::selectRaw( '
            ppp.*,
            count( pppf.id ) AS files, count( ppph.id ) AS histories,
            pp.name as ppname,
            pp.colo_reference as ppcolo_reference,
            pp.port_prefix AS prefix,
            pp.cable_type AS ppcable_type,
            pp.colo_pp_type,
            sp.name AS spname,
            s.name AS sname, c.abbreviatedName AS cname,
            count( ppps.id ) AS nbslave, 
            max( ppps.number ) AS slavenumber' )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Models/Aggregators/RouteServerFilterAggregator.php">
    <LessSpecificImplementedReturnType>
      <code><![CDATA[Builder|RouteServerFilterAggregator]]></code>
      <code><![CDATA[Builder|RouteServerFilterAggregator]]></code>
      <code><![CDATA[Builder|RouteServerFilterAggregator]]></code>
    </LessSpecificImplementedReturnType>
    <UndefinedMagicMethod>
      <code><![CDATA[RouteServerFilter::forceCreate( array_merge(
                        $pf->getAttributes(),
                        [ 'id' => null ]
                    ) )]]></code>
      <code><![CDATA[RouteServerFilterProd::forceCreate( array_merge(
                        $pf->getAttributes(),
                        [ 'id' => null ]
                    ) )]]></code>
      <code><![CDATA[orderBy]]></code>
      <code><![CDATA[orderBy]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Models/Aggregators/RouterAggregator.php">
    <LessSpecificImplementedReturnType>
      <code><![CDATA[Builder|RouterAggregator]]></code>
      <code><![CDATA[Builder|RouterAggregator]]></code>
      <code><![CDATA[Builder|RouterAggregator]]></code>
    </LessSpecificImplementedReturnType>
    <UndefinedMagicMethod>
      <code><![CDATA[self::
//        select( [
//            'routers.handle', 'routers.name', 'routers.updated_at'
//        ] )
//            leftJoin( 'vlan as v', 'v.id', 'routers.vlan_id' )
//            ->leftJoin( 'infrastructure as i', 'i.id', 'v.infrastructureid' )
            whereNotNull( 'api' )]]></code>
      <code><![CDATA[self::whereNotNull( 'api' )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Models/Aggregators/RsPrefixAggregator.php">
    <LessSpecificImplementedReturnType>
      <code><![CDATA[Builder|RsPrefixAggregator]]></code>
      <code><![CDATA[Builder|RsPrefixAggregator]]></code>
      <code><![CDATA[Builder|RsPrefixAggregator]]></code>
    </LessSpecificImplementedReturnType>
    <UndefinedMagicMethod>
      <code><![CDATA[self::selectRaw(
            'cust.id AS id, cust.name AS name,
            rs_prefixes.protocol AS protocol, rs_prefixes.irrdb AS irrdb,
            count( rs_prefixes.protocol ) AS prefixes'
        )]]></code>
      <code><![CDATA[self::selectRaw(
            'cust.id AS id, cust.name AS name, rs_prefixes.protocol AS protocol,
                        rs_prefixes.irrdb AS irrdb, rs_prefixes.prefix AS prefix,
                        rs_prefixes.timestamp AS timestamp, rs_prefixes.rs_origin AS rsorigin'
        )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Models/Aggregators/SwitchPortAggregator.php">
    <LessSpecificImplementedReturnType>
      <code><![CDATA[Builder|SwitchPortAggregator]]></code>
      <code><![CDATA[Builder|SwitchPortAggregator]]></code>
      <code><![CDATA[Builder|SwitchPortAggregator]]></code>
    </LessSpecificImplementedReturnType>
    <UndefinedMagicMethod>
      <code><![CDATA[self::select( [
            'sp.id AS id', 'sp.name AS name', 'sp.type AS porttype'
        ] )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Models/Aggregators/SwitcherAggregator.php">
    <InvalidOperand>
      <code><![CDATA[$mask]]></code>
    </InvalidOperand>
    <InvalidScalarArgument>
      <code><![CDATA[$firstip]]></code>
      <code><![CDATA[$firstip + 1]]></code>
    </InvalidScalarArgument>
    <LessSpecificImplementedReturnType>
      <code><![CDATA[Builder|SwitcherAggregator]]></code>
      <code><![CDATA[Builder|SwitcherAggregator]]></code>
      <code><![CDATA[Builder|SwitcherAggregator]]></code>
    </LessSpecificImplementedReturnType>
    <MismatchingDocblockParamType>
      <code><![CDATA[string|null]]></code>
    </MismatchingDocblockParamType>
    <UndefinedMagicMethod>
      <code><![CDATA[selectRaw]]></code>
      <code><![CDATA[self::select( 'switch.*' )]]></code>
      <code><![CDATA[self::select( [ 'sp.name AS name', 'sp.type AS porttype', 'sp.id AS id' ] )]]></code>
      <code><![CDATA[self::selectRaw(
            's.name AS switchname, 
                s.id AS switchid,
                GROUP_CONCAT( sp.ifName ) AS ifName,
                GROUP_CONCAT( pi.speed )  AS speed,
                GROUP_CONCAT( pi.rate_limit ) AS rate_limit,
                GROUP_CONCAT( pi.status ) AS portstatus,
                cust.name AS customer, 
                cust.id AS custid, 
                cust.autsys AS asn,
                MAX( vli.rsclient    ) AS rsclient,
                MAX( vli.ipv4enabled ) AS ipv4enabled, 
                MAX( vli.ipv6enabled ) AS ipv6enabled, 
                v.name AS vlan,
                GROUP_CONCAT( DISTINCT ipv4.address ) AS ipv4address, 
                GROUP_CONCAT( DISTINCT ipv6.address ) AS ipv6address'
        )]]></code>
      <code><![CDATA[where]]></code>
      <code><![CDATA[where]]></code>
      <code><![CDATA[where]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Models/Aggregators/TrafficDailyPhysIntAggregator.php">
    <LessSpecificImplementedReturnType>
      <code><![CDATA[Builder|TrafficDailyPhysIntAggregator]]></code>
      <code><![CDATA[Builder|TrafficDailyPhysIntAggregator]]></code>
      <code><![CDATA[Builder|TrafficDailyPhysIntAggregator]]></code>
    </LessSpecificImplementedReturnType>
    <UndefinedMagicMethod>
      <code><![CDATA[self::selectRaw(
            "c.id AS cid, c.abbreviatedName AS cname, ANY_VALUE( s.name ) as switch,
                        vi.id AS viid,
                        SUM( tdpi.{$period}_max_in ) AS max_in,
                        SUM( tdpi.{$period}_max_out ) AS max_out,
                        COUNT( pi.id ) AS num_ports_in_lag,
                        SUM( COALESCE( pi.rate_limit, pi.speed ) ) AS vi_speed,
                        ROUND( GREATEST( (MAX( tdpi.{$period}_max_in )/1000000/MAX( COALESCE( pi.rate_limit, pi.speed ) ))*100, (MAX( tdpi.{$period}_max_out )/1000000/MAX( COALESCE( pi.rate_limit, pi.speed ) ))*100 ), 2) AS util"
        )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Models/Aggregators/UserAggregator.php">
    <LessSpecificImplementedReturnType>
      <code><![CDATA[\Illuminate\Database\Eloquent\Builder|UserAggregator]]></code>
      <code><![CDATA[\Illuminate\Database\Eloquent\Builder|UserAggregator]]></code>
      <code><![CDATA[\Illuminate\Database\Eloquent\Builder|UserAggregator]]></code>
    </LessSpecificImplementedReturnType>
    <UndefinedMagicMethod>
      <code><![CDATA[Customer::where( 'autsys', $asn )]]></code>
      <code><![CDATA[Customer::whereIn( 'autsys', $asns )]]></code>
      <code><![CDATA[CustomerToUser::create([
                    'customer_id'       => $cust->id,
                    'user_id'           => $user->id,
                    'privs'             => $priv,
                    'extra_attributes'  => [ "created_by" => [ "type" => "PeeringDB"  ] ],
                ])]]></code>
      <code><![CDATA[User::where( 'peeringdb_id', $pdbuser['id'] )]]></code>
      <code><![CDATA[User::where( 'username', $uname )]]></code>
      <code><![CDATA[UserLoginHistory::where( 'customer_to_user_id', $c2u->id )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Models/Aggregators/VirtualInterfaceAggregator.php">
    <LessSpecificImplementedReturnType>
      <code><![CDATA[Builder|VirtualInterfaceAggregator]]></code>
      <code><![CDATA[Builder|VirtualInterfaceAggregator]]></code>
      <code><![CDATA[Builder|VirtualInterfaceAggregator]]></code>
    </LessSpecificImplementedReturnType>
    <MissingDocblockType>
      <code><![CDATA[public static function getByLocation(): array]]></code>
      <code><![CDATA[public static function getForInfrastructure( Infrastructure $infra, $proto = false, $externalOnly = true ): Collection]]></code>
      <code><![CDATA[public static function validateChannelGroup( VirtualInterface $vi ): bool]]></code>
    </MissingDocblockType>
    <UndefinedMagicMethod>
      <code><![CDATA[VirtualInterface::select( [ 'vi.id AS id' ] )]]></code>
      <code><![CDATA[self::select( [
            'cust.id AS customerid',
            'vi.id AS id',
            'pi.speed AS speed',
            'pi.rate_limit AS rlspeed',
            'i.id AS infrastructureid',
            'i.name AS infrastructure',
            'l.id AS locationid',
            'l.name AS locationname',
            'ca.id AS cabinetid',
            'ca.name AS cabinetname',
        ] )]]></code>
      <code><![CDATA[self::select( [ 'vi.*' ] )]]></code>
      <code><![CDATA[self::selectRaw(
            "v.name AS vlanname,
            v.id AS vlanid, 
            COUNT( DISTINCT vi.custid ) AS count, 
            COUNT( DISTINCT vi.custid ) / ( 
            SELECT COUNT( DISTINCT vi.custid ) FROM virtualinterface AS vi
                        JOIN vlaninterface as vli ON vli.virtualinterfaceid = vi.id
                        JOIN vlan AS v ON v.id = vli.vlanid
                        JOIN cust AS c ON c.id = vi.custid
                        LEFT JOIN physicalinterface AS pi ON pi.virtualinterfaceid = vi.id
                        WHERE v.private = 0 AND pi.status = 1 AND c.`type`IN (1,4) ) * 100 AS percent"
        )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Models/Aggregators/VlanAggregator.php">
    <LessSpecificImplementedReturnType>
      <code><![CDATA[\Illuminate\Database\Eloquent\Builder|VlanAggregator]]></code>
      <code><![CDATA[\Illuminate\Database\Eloquent\Builder|VlanAggregator]]></code>
      <code><![CDATA[\Illuminate\Database\Eloquent\Builder|VlanAggregator]]></code>
    </LessSpecificImplementedReturnType>
    <MissingDocblockType>
      <code><![CDATA[public static function arpaDetails( Vlan $vlan, int $proto ): array]]></code>
      <code><![CDATA[public static function ipAddresses( int $vid, int $proto ) : array]]></code>
    </MissingDocblockType>
    <UndefinedMagicMethod>
      <code><![CDATA[Vlan::select( [
                "{$table}.id", "{$table}.address",
                'vlan.id AS vid', 'vli.id as vliid'
            ] )]]></code>
      <code><![CDATA[Vlan::select( [
                'c.id AS cid', 'c.name AS cname', 'c.autsys AS cautsys', 'c.abbreviatedName AS cabbreviatedname',
                'vi.id AS viid', 'vli.id AS vliid',
                'v.id AS vid', 'v.name AS vname', 'v.number AS vnumber'
            ] )]]></code>
      <code><![CDATA[Vlan::selectRaw(
                "vli.ipv{$proto}enabled as enabled, 
                            addr.address AS address,
                            vli.ipv{$proto}hostname AS hostname,
                            {$address} AS aton"
        )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Models/Aggregators/VlanInterfaceAggregator.php">
    <LessSpecificImplementedReturnType>
      <code><![CDATA[Builder|VlanInterfaceAggregator]]></code>
      <code><![CDATA[Builder|VlanInterfaceAggregator]]></code>
      <code><![CDATA[Builder|VlanInterfaceAggregator]]></code>
    </LessSpecificImplementedReturnType>
    <MissingDocblockType>
      <code><![CDATA[public static function forProto( Vlan $vlan, int $proto, ?int $pistatus = PhysicalInterface::STATUS_CONNECTED ) : array]]></code>
      <code><![CDATA[public static function getAllIPsForASN( Vlan $v, int $asn, int $proto ): array]]></code>
    </MissingDocblockType>
    <UndefinedMagicMethod>
      <code><![CDATA[Vlan::select( [ 'ip.address' ] )]]></code>
      <code><![CDATA[self::select( [
            'cust.id AS cid', 'cust.name AS cname',
            'cust.abbreviatedName AS abrevcname',
            'cust.shortname AS cshortname',
            'cust.autsys AS autsys', 'cust.maxprefixes AS gmaxprefixes',
            'cust.peeringmacro AS peeringmacro', 'cust.peeringmacrov6  AS peeringmacrov6',

            'v.id AS vid', 'v.number AS vtag', 'v.name AS vname', 'vi.id AS viid',

            'vli.id AS vliid',

            "vli.ipv{$proto}enabled      AS enabled" ,
            "vli.ipv{$proto}hostname     AS hostname" ,
            "vli.ipv{$proto}monitorrcbgp AS monitorrcbgp" ,
            "vli.ipv{$proto}bgpmd5secret AS bgpmd5secret" ,
            'vli.maxbgpprefix            AS maxbgpprefix' ,
            'vli.as112client             AS as112client' ,
            'vli.rsclient                AS rsclient' ,
            'vli.busyhost                AS busyhost' ,
            'vli.irrdbfilter             AS irrdbfilter' ,
            'vli.rsmorespecifics         AS rsmorespecifics' ,
            "vli.ipv{$proto}canping      AS canping" ,

            'addr.address AS address',

            's.id   AS sid' ,
            's.name AS sname' ,

            'cab.id   AS cabid' ,
            'cab.name AS cabname' ,

            'l.id        AS location_id' ,
            'l.name      AS location_name' ,
            'l.shortname AS location_shortname' ,
            'l.tag       AS location_tag'
        ] )]]></code>
      <code><![CDATA[self::select( [ 'vli.*' ] )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Models/ApiKey.php">
    <LessSpecificImplementedReturnType>
      <code><![CDATA[Builder|ApiKey]]></code>
      <code><![CDATA[Builder|ApiKey]]></code>
      <code><![CDATA[Builder|ApiKey]]></code>
    </LessSpecificImplementedReturnType>
  </file>
  <file src="app/Models/AtlasMeasurement.php">
    <LessSpecificImplementedReturnType>
      <code><![CDATA[Builder|AtlasMeasurement]]></code>
      <code><![CDATA[Builder|AtlasMeasurement]]></code>
      <code><![CDATA[Builder|AtlasMeasurement]]></code>
    </LessSpecificImplementedReturnType>
  </file>
  <file src="app/Models/AtlasProbe.php">
    <LessSpecificImplementedReturnType>
      <code><![CDATA[Builder|AtlasProbe]]></code>
      <code><![CDATA[Builder|AtlasProbe]]></code>
      <code><![CDATA[Builder|AtlasProbe]]></code>
    </LessSpecificImplementedReturnType>
  </file>
  <file src="app/Models/AtlasResult.php">
    <LessSpecificImplementedReturnType>
      <code><![CDATA[Builder|AtlasResult]]></code>
      <code><![CDATA[Builder|AtlasResult]]></code>
      <code><![CDATA[Builder|AtlasResult]]></code>
    </LessSpecificImplementedReturnType>
  </file>
  <file src="app/Models/AtlasRun.php">
    <LessSpecificImplementedReturnType>
      <code><![CDATA[Builder|AtlasRun]]></code>
      <code><![CDATA[Builder|AtlasRun]]></code>
      <code><![CDATA[Builder|AtlasRun]]></code>
    </LessSpecificImplementedReturnType>
  </file>
  <file src="app/Models/BgpSession.php">
    <LessSpecificImplementedReturnType>
      <code><![CDATA[\Illuminate\Database\Eloquent\Builder|BgpSession]]></code>
      <code><![CDATA[\Illuminate\Database\Eloquent\Builder|BgpSession]]></code>
      <code><![CDATA[\Illuminate\Database\Eloquent\Builder|BgpSession]]></code>
    </LessSpecificImplementedReturnType>
  </file>
  <file src="app/Models/BgpSessionData.php">
    <ImplementedReturnTypeMismatch>
      <code><![CDATA[Builder|BgpSessionDataAggregator]]></code>
      <code><![CDATA[Builder|BgpSessionDataAggregator]]></code>
      <code><![CDATA[Builder|BgpSessionDataAggregator]]></code>
    </ImplementedReturnTypeMismatch>
  </file>
  <file src="app/Models/Cabinet.php">
    <LessSpecificImplementedReturnType>
      <code><![CDATA[Builder|Cabinet]]></code>
      <code><![CDATA[Builder|Cabinet]]></code>
      <code><![CDATA[Builder|Cabinet]]></code>
    </LessSpecificImplementedReturnType>
  </file>
  <file src="app/Models/CompanyBillingDetail.php">
    <LessSpecificImplementedReturnType>
      <code><![CDATA[\Illuminate\Database\Eloquent\Builder|CompanyBillingDetail]]></code>
      <code><![CDATA[\Illuminate\Database\Eloquent\Builder|CompanyBillingDetail]]></code>
      <code><![CDATA[\Illuminate\Database\Eloquent\Builder|CompanyBillingDetail]]></code>
    </LessSpecificImplementedReturnType>
  </file>
  <file src="app/Models/CompanyRegisteredDetail.php">
    <LessSpecificImplementedReturnType>
      <code><![CDATA[\Illuminate\Database\Eloquent\Builder|CompanyRegisteredDetail]]></code>
      <code><![CDATA[\Illuminate\Database\Eloquent\Builder|CompanyRegisteredDetail]]></code>
      <code><![CDATA[\Illuminate\Database\Eloquent\Builder|CompanyRegisteredDetail]]></code>
    </LessSpecificImplementedReturnType>
  </file>
  <file src="app/Models/ConsoleServer.php">
    <LessSpecificImplementedReturnType>
      <code><![CDATA[Builder|ConsoleServer]]></code>
      <code><![CDATA[Builder|ConsoleServer]]></code>
      <code><![CDATA[Builder|ConsoleServer]]></code>
    </LessSpecificImplementedReturnType>
  </file>
  <file src="app/Models/ConsoleServerConnection.php">
    <LessSpecificImplementedReturnType>
      <code><![CDATA[Builder|ConsoleServerConnection]]></code>
      <code><![CDATA[Builder|ConsoleServerConnection]]></code>
      <code><![CDATA[Builder|ConsoleServerConnection]]></code>
    </LessSpecificImplementedReturnType>
  </file>
  <file src="app/Models/Contact.php">
    <LessSpecificImplementedReturnType>
      <code><![CDATA[Builder|Contact]]></code>
      <code><![CDATA[Builder|Contact]]></code>
      <code><![CDATA[Builder|Contact]]></code>
    </LessSpecificImplementedReturnType>
  </file>
  <file src="app/Models/ContactGroup.php">
    <LessSpecificImplementedReturnType>
      <code><![CDATA[Builder|ContactGroup]]></code>
      <code><![CDATA[Builder|ContactGroup]]></code>
      <code><![CDATA[Builder|ContactGroup]]></code>
    </LessSpecificImplementedReturnType>
  </file>
  <file src="app/Models/CoreBundle.php">
    <LessSpecificImplementedReturnType>
      <code><![CDATA[Builder|CoreBundle]]></code>
      <code><![CDATA[Builder|CoreBundle]]></code>
      <code><![CDATA[Builder|CoreBundle]]></code>
    </LessSpecificImplementedReturnType>
    <MissingDocblockType>
      <code><![CDATA[public function deleteObject(): bool]]></code>
    </MissingDocblockType>
    <UndefinedMagicMethod>
      <code><![CDATA[self::select( 'cl.*' )]]></code>
    </UndefinedMagicMethod>
    <UndefinedMagicPropertyFetch>
      <code><![CDATA[$cl->coreInterfaceSideA->physicalinterface]]></code>
      <code><![CDATA[$cl->coreInterfaceSideA->physicalinterface]]></code>
      <code><![CDATA[$side->physicalinterface]]></code>
    </UndefinedMagicPropertyFetch>
  </file>
  <file src="app/Models/CoreInterface.php">
    <InvalidNullableReturnType>
      <code><![CDATA[CoreLink]]></code>
    </InvalidNullableReturnType>
    <LessSpecificImplementedReturnType>
      <code><![CDATA[\Illuminate\Database\Eloquent\Builder|CoreInterface]]></code>
      <code><![CDATA[\Illuminate\Database\Eloquent\Builder|CoreInterface]]></code>
      <code><![CDATA[\Illuminate\Database\Eloquent\Builder|CoreInterface]]></code>
    </LessSpecificImplementedReturnType>
    <NullableReturnStatement>
      <code><![CDATA[$this->coreLinkSideA]]></code>
      <code><![CDATA[$this->coreLinkSideB]]></code>
    </NullableReturnStatement>
  </file>
  <file src="app/Models/CoreLink.php">
    <LessSpecificImplementedReturnType>
      <code><![CDATA[Builder|CoreLink]]></code>
      <code><![CDATA[Builder|CoreLink]]></code>
      <code><![CDATA[Builder|CoreLink]]></code>
    </LessSpecificImplementedReturnType>
  </file>
  <file src="app/Models/Customer.php">
    <LessSpecificImplementedReturnType>
      <code><![CDATA[Builder|Customer]]></code>
      <code><![CDATA[Builder|Customer]]></code>
      <code><![CDATA[Builder|Customer]]></code>
    </LessSpecificImplementedReturnType>
    <MissingDocblockType>
      <code><![CDATA[public function routeServerClient( ?int $proto = null ): bool]]></code>
    </MissingDocblockType>
    <UndefinedMagicMethod>
      <code><![CDATA[self::leftJoin( 'virtualinterface AS vi', 'vi.custid', 'cust.id' )]]></code>
      <code><![CDATA[self::leftJoin( 'virtualinterface AS vi', 'vi.custid', 'cust.id' )]]></code>
      <code><![CDATA[self::leftJoin( 'virtualinterface AS vi', 'vi.custid', 'cust.id' )]]></code>
      <code><![CDATA[self::leftJoin( 'virtualinterface AS vi', 'vi.custid', 'cust.id' )]]></code>
      <code><![CDATA[self::leftJoin( 'virtualinterface AS vi', 'vi.custid', 'cust.id' )]]></code>
      <code><![CDATA[self::leftJoin( 'virtualinterface AS vi', 'vi.custid', 'cust.id' )]]></code>
      <code><![CDATA[self::leftJoin('virtualinterface AS vi', 'vi.custid', 'cust.id')]]></code>
      <code><![CDATA[self::select( 'cust.*' )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Models/CustomerEquipment.php">
    <LessSpecificImplementedReturnType>
      <code><![CDATA[Builder|CustomerEquipment]]></code>
      <code><![CDATA[Builder|CustomerEquipment]]></code>
      <code><![CDATA[Builder|CustomerEquipment]]></code>
    </LessSpecificImplementedReturnType>
  </file>
  <file src="app/Models/CustomerNote.php">
    <LessSpecificImplementedReturnType>
      <code><![CDATA[Builder|CustomerNote]]></code>
      <code><![CDATA[Builder|CustomerNote]]></code>
      <code><![CDATA[Builder|CustomerNote]]></code>
    </LessSpecificImplementedReturnType>
  </file>
  <file src="app/Models/CustomerTag.php">
    <LessSpecificImplementedReturnType>
      <code><![CDATA[Builder|CustomerTag]]></code>
      <code><![CDATA[Builder|CustomerTag]]></code>
      <code><![CDATA[Builder|CustomerTag]]></code>
    </LessSpecificImplementedReturnType>
  </file>
  <file src="app/Models/CustomerToCustomerTag.php">
    <LessSpecificImplementedReturnType>
      <code><![CDATA[\Illuminate\Database\Eloquent\Builder|CustomerToCustomerTag]]></code>
      <code><![CDATA[\Illuminate\Database\Eloquent\Builder|CustomerToCustomerTag]]></code>
      <code><![CDATA[\Illuminate\Database\Eloquent\Builder|CustomerToCustomerTag]]></code>
    </LessSpecificImplementedReturnType>
  </file>
  <file src="app/Models/CustomerToUser.php">
    <LessSpecificImplementedReturnType>
      <code><![CDATA[Builder|CustomerToUser]]></code>
      <code><![CDATA[Builder|CustomerToUser]]></code>
      <code><![CDATA[Builder|CustomerToUser]]></code>
    </LessSpecificImplementedReturnType>
  </file>
  <file src="app/Models/DocstoreCustomerDirectory.php">
    <LessSpecificImplementedReturnType>
      <code><![CDATA[Builder|DocstoreCustomerDirectory]]></code>
      <code><![CDATA[Builder|DocstoreCustomerDirectory]]></code>
      <code><![CDATA[Builder|DocstoreCustomerDirectory]]></code>
    </LessSpecificImplementedReturnType>
    <MismatchingDocblockParamType>
      <code><![CDATA[User|null]]></code>
    </MismatchingDocblockParamType>
    <MissingDocblockType>
      <code><![CDATA[public static function deleteAllForCustomer( Customer $cust ): void]]></code>
      <code><![CDATA[public static function recursiveDelete( DocstoreCustomerDirectory $dir ): void]]></code>
    </MissingDocblockType>
    <UndefinedMagicMethod>
      <code><![CDATA[self::where( 'cust_id', $cust->id )]]></code>
      <code><![CDATA[self::where( 'cust_id', $cust->id )]]></code>
      <code><![CDATA[self::where( 'cust_id', $cust->id )]]></code>
      <code><![CDATA[self::where( 'id', $subdir->id )]]></code>
      <code><![CDATA[self::where('parent_dir_id', null )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Models/DocstoreCustomerFile.php">
    <LessSpecificImplementedReturnType>
      <code><![CDATA[Builder|DocstoreCustomerFile]]></code>
      <code><![CDATA[Builder|DocstoreCustomerFile]]></code>
      <code><![CDATA[Builder|DocstoreCustomerFile]]></code>
    </LessSpecificImplementedReturnType>
    <MismatchingDocblockParamType>
      <code><![CDATA[User|null]]></code>
    </MismatchingDocblockParamType>
    <UndefinedMagicMethod>
      <code><![CDATA[self::where('min_privs', '<=', $privs )]]></code>
      <code><![CDATA[self::where('min_privs', '<=', $user->privs() )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Models/DocstoreDirectory.php">
    <LessSpecificImplementedReturnType>
      <code><![CDATA[Builder|DocstoreDirectory]]></code>
      <code><![CDATA[Builder|DocstoreDirectory]]></code>
      <code><![CDATA[Builder|DocstoreDirectory]]></code>
    </LessSpecificImplementedReturnType>
    <MissingDocblockType>
      <code><![CDATA[public static function recursiveDelete( DocstoreDirectory $dir ): void]]></code>
    </MissingDocblockType>
    <UndefinedMagicMethod>
      <code><![CDATA[self::where( 'id', $subdir->id )]]></code>
      <code><![CDATA[self::where('parent_dir_id', $dir->id ?? null )]]></code>
      <code><![CDATA[self::where('parent_dir_id', null )]]></code>
      <code><![CDATA[self::where('parent_dir_id', null )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Models/DocstoreFile.php">
    <LessSpecificImplementedReturnType>
      <code><![CDATA[Builder|DocstoreFile]]></code>
      <code><![CDATA[Builder|DocstoreFile]]></code>
      <code><![CDATA[Builder|DocstoreFile]]></code>
    </LessSpecificImplementedReturnType>
    <UndefinedMagicMethod>
      <code><![CDATA[self::where('min_privs', '<=', $privs )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Models/DocstoreLog.php">
    <LessSpecificImplementedReturnType>
      <code><![CDATA[Builder|DocstoreLog]]></code>
      <code><![CDATA[Builder|DocstoreLog]]></code>
      <code><![CDATA[Builder|DocstoreLog]]></code>
    </LessSpecificImplementedReturnType>
    <UndefinedMagicMethod>
      <code><![CDATA[self::select([ 'docstore_logs.*', 'user.name AS name', 'user.username AS username' ])]]></code>
      <code><![CDATA[self::select([ 'docstore_logs.id', 'docstore_logs.downloaded_by',
                DB::raw( 'COUNT(docstore_logs.downloaded_by) AS downloads' ),
                DB::raw( 'MAX(docstore_logs.created_at) AS last_downloaded' ),
                DB::raw( 'MIN(docstore_logs.created_at) AS first_downloaded' ),
                'user.name AS name', 'user.username AS username'
            ])]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Models/IPv4Address.php">
    <LessSpecificImplementedReturnType>
      <code><![CDATA[Builder|IPv4Address]]></code>
      <code><![CDATA[Builder|IPv4Address]]></code>
      <code><![CDATA[Builder|IPv4Address]]></code>
    </LessSpecificImplementedReturnType>
  </file>
  <file src="app/Models/IPv6Address.php">
    <LessSpecificImplementedReturnType>
      <code><![CDATA[\Illuminate\Database\Eloquent\Builder|IPv6Address]]></code>
      <code><![CDATA[\Illuminate\Database\Eloquent\Builder|IPv6Address]]></code>
      <code><![CDATA[\Illuminate\Database\Eloquent\Builder|IPv6Address]]></code>
    </LessSpecificImplementedReturnType>
  </file>
  <file src="app/Models/Infrastructure.php">
    <LessSpecificImplementedReturnType>
      <code><![CDATA[Builder|Infrastructure]]></code>
      <code><![CDATA[Builder|Infrastructure]]></code>
      <code><![CDATA[Builder|Infrastructure]]></code>
    </LessSpecificImplementedReturnType>
  </file>
  <file src="app/Models/IrrdbAsn.php">
    <LessSpecificImplementedReturnType>
      <code><![CDATA[\Illuminate\Database\Eloquent\Builder|IrrdbAsn]]></code>
      <code><![CDATA[\Illuminate\Database\Eloquent\Builder|IrrdbAsn]]></code>
      <code><![CDATA[\Illuminate\Database\Eloquent\Builder|IrrdbAsn]]></code>
    </LessSpecificImplementedReturnType>
  </file>
  <file src="app/Models/IrrdbConfig.php">
    <LessSpecificImplementedReturnType>
      <code><![CDATA[Builder|IrrdbConfig]]></code>
      <code><![CDATA[Builder|IrrdbConfig]]></code>
      <code><![CDATA[Builder|IrrdbConfig]]></code>
    </LessSpecificImplementedReturnType>
  </file>
  <file src="app/Models/IrrdbPrefix.php">
    <LessSpecificImplementedReturnType>
      <code><![CDATA[\Illuminate\Database\Eloquent\Builder|IrrdbPrefix]]></code>
      <code><![CDATA[\Illuminate\Database\Eloquent\Builder|IrrdbPrefix]]></code>
      <code><![CDATA[\Illuminate\Database\Eloquent\Builder|IrrdbPrefix]]></code>
    </LessSpecificImplementedReturnType>
  </file>
  <file src="app/Models/IrrdbUpdateLog.php">
    <LessSpecificImplementedReturnType>
      <code><![CDATA[\Illuminate\Database\Eloquent\Builder|IrrdbUpdateLog]]></code>
      <code><![CDATA[\Illuminate\Database\Eloquent\Builder|IrrdbUpdateLog]]></code>
      <code><![CDATA[\Illuminate\Database\Eloquent\Builder|IrrdbUpdateLog]]></code>
    </LessSpecificImplementedReturnType>
    <RedundantCondition>
      <code><![CDATA[!$oldest]]></code>
      <code><![CDATA[!$oldest]]></code>
    </RedundantCondition>
    <TypeDoesNotContainType>
      <code><![CDATA[$oldest]]></code>
      <code><![CDATA[$oldest]]></code>
    </TypeDoesNotContainType>
    <UndefinedMagicMethod>
      <code><![CDATA[self::firstWhere('cust_id', $c->id)]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Models/Layer2Address.php">
    <LessSpecificImplementedReturnType>
      <code><![CDATA[Builder|Layer2Address]]></code>
      <code><![CDATA[Builder|Layer2Address]]></code>
      <code><![CDATA[Builder|Layer2Address]]></code>
    </LessSpecificImplementedReturnType>
  </file>
  <file src="app/Models/Location.php">
    <LessSpecificImplementedReturnType>
      <code><![CDATA[Builder|Location]]></code>
      <code><![CDATA[Builder|Location]]></code>
      <code><![CDATA[Builder|Location]]></code>
    </LessSpecificImplementedReturnType>
  </file>
  <file src="app/Models/Log.php">
    <LessSpecificImplementedReturnType>
      <code><![CDATA[Builder|Log]]></code>
      <code><![CDATA[Builder|Log]]></code>
      <code><![CDATA[Builder|Log]]></code>
    </LessSpecificImplementedReturnType>
  </file>
  <file src="app/Models/Logo.php">
    <LessSpecificImplementedReturnType>
      <code><![CDATA[\Illuminate\Database\Eloquent\Builder|Logo]]></code>
      <code><![CDATA[\Illuminate\Database\Eloquent\Builder|Logo]]></code>
      <code><![CDATA[\Illuminate\Database\Eloquent\Builder|Logo]]></code>
    </LessSpecificImplementedReturnType>
  </file>
  <file src="app/Models/MacAddress.php">
    <LessSpecificImplementedReturnType>
      <code><![CDATA[Builder|MacAddress]]></code>
      <code><![CDATA[Builder|MacAddress]]></code>
      <code><![CDATA[Builder|MacAddress]]></code>
    </LessSpecificImplementedReturnType>
  </file>
  <file src="app/Models/NetworkInfo.php">
    <LessSpecificImplementedReturnType>
      <code><![CDATA[Builder|NetworkInfo]]></code>
      <code><![CDATA[Builder|NetworkInfo]]></code>
      <code><![CDATA[Builder|NetworkInfo]]></code>
    </LessSpecificImplementedReturnType>
  </file>
  <file src="app/Models/Oui.php">
    <LessSpecificImplementedReturnType>
      <code><![CDATA[\Illuminate\Database\Eloquent\Builder|Oui]]></code>
      <code><![CDATA[\Illuminate\Database\Eloquent\Builder|Oui]]></code>
      <code><![CDATA[\Illuminate\Database\Eloquent\Builder|Oui]]></code>
    </LessSpecificImplementedReturnType>
  </file>
  <file src="app/Models/P2pDailyStats.php">
    <LessSpecificImplementedReturnType>
      <code><![CDATA[\Illuminate\Database\Eloquent\Builder|P2pDailyStats]]></code>
      <code><![CDATA[\Illuminate\Database\Eloquent\Builder|P2pDailyStats]]></code>
      <code><![CDATA[\Illuminate\Database\Eloquent\Builder|P2pDailyStats]]></code>
    </LessSpecificImplementedReturnType>
    <MismatchingDocblockReturnType>
      <code><![CDATA[P2pDailyStats[]]]></code>
    </MismatchingDocblockReturnType>
    <UndefinedMagicMethod>
      <code><![CDATA[max]]></code>
      <code><![CDATA[self::select( DB::raw('peer_id, ipv6_total_out + ipv4_total_out + ipv6_total_in + ipv4_total_in as total_traffic') )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Models/PatchPanel.php">
    <LessSpecificImplementedReturnType>
      <code><![CDATA[Builder|PatchPanel]]></code>
      <code><![CDATA[Builder|PatchPanel]]></code>
      <code><![CDATA[Builder|PatchPanel]]></code>
    </LessSpecificImplementedReturnType>
    <UndefinedMagicMethod>
      <code><![CDATA[PatchPanelPort::create( [
                'number'            => ( $max + $i ),
                'state'             => PatchPanelPort::STATE_AVAILABLE,
                'patch_panel_id'    => $this->id,
                'chargeable'        => $this->chargeable,
                'last_state_change' => now(),
            ] )]]></code>
      <code><![CDATA[self::select( [ 'ppp.*' ] )]]></code>
      <code><![CDATA[self::select( [ 'ppp.id' ] )]]></code>
      <code><![CDATA[self::select( [ 'pppm.*' ] )]]></code>
      <code><![CDATA[self::select( [ 'ppps.id' ] )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Models/PatchPanelPort.php">
    <ImplicitToStringCast>
      <code><![CDATA[now()]]></code>
    </ImplicitToStringCast>
    <LessSpecificImplementedReturnType>
      <code><![CDATA[Builder|PatchPanelPort]]></code>
      <code><![CDATA[Builder|PatchPanelPort]]></code>
      <code><![CDATA[Builder|PatchPanelPort]]></code>
    </LessSpecificImplementedReturnType>
    <MissingDocblockType>
      <code><![CDATA[$slave->remove();]]></code>
      <code><![CDATA[$user]]></code>
      <code><![CDATA[public function archive(): PatchPanelPortHistory]]></code>
      <code><![CDATA[public function move( PatchPanelPort $dest, PatchPanelPort $slave = null ): bool]]></code>
      <code><![CDATA[public function remove(): void]]></code>
    </MissingDocblockType>
    <NoInterfaceProperties>
      <code><![CDATA[Auth::getUser()->username]]></code>
      <code><![CDATA[Auth::getUser()->username]]></code>
      <code><![CDATA[Auth::getUser()->username]]></code>
    </NoInterfaceProperties>
    <TypeDoesNotContainType>
      <code><![CDATA[!( $history = $this->archive() )]]></code>
    </TypeDoesNotContainType>
    <UndefinedMagicMethod>
      <code><![CDATA[PatchPanelPortHistory::create(
                array_merge(
                    $historyPort->replicate( [ 'id', 'duplex_master_id', 'number', 'patch_panel_port_id' ] )->toArray(),
                    [
                        'number'                => $slave->number,
                        'duplex_master_id'      => $historyPort->id,
                        'patch_panel_port_id'   => $slave->id,
                    ]
                )
            )]]></code>
      <code><![CDATA[get]]></code>
      <code><![CDATA[getPath]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Models/PatchPanelPortFile.php">
    <LessSpecificImplementedReturnType>
      <code><![CDATA[Builder|PatchPanelPortFile]]></code>
      <code><![CDATA[Builder|PatchPanelPortFile]]></code>
      <code><![CDATA[Builder|PatchPanelPortFile]]></code>
    </LessSpecificImplementedReturnType>
  </file>
  <file src="app/Models/PatchPanelPortHistory.php">
    <LessSpecificImplementedReturnType>
      <code><![CDATA[Builder|PatchPanelPortHistory]]></code>
      <code><![CDATA[Builder|PatchPanelPortHistory]]></code>
      <code><![CDATA[Builder|PatchPanelPortHistory]]></code>
    </LessSpecificImplementedReturnType>
    <MissingDocblockType>
      <code><![CDATA[public static function createFromPort( PatchPanelPort $ppp ): PatchPanelPortHistory]]></code>
    </MissingDocblockType>
    <UndefinedMagicMethod>
      <code><![CDATA[self::create( [
            'switchport'            => $ppp->switchPort ? $ppp->switchPort->switcher->name . '::' . $ppp->switchPort->name : '',
            'patch_panel_port_id'   => $ppp->id,
            'customer'              => $ppp->customer->name ?? '',
            'cust_id'               => $ppp->customer->id ?? '',
            'state'                 => $ppp->state,
            'notes'                 => $ppp->notes,
            'assigned_at'           => $ppp->assigned_at,
            'connected_at'          => $ppp->connected_at,
            'cease_requested_at'    => $ppp->cease_requested_at,
            'ceased_at'             => $ppp->ceased_at ?? now(),
            'internal_use'          => $ppp->internal_use,
            'chargeable'            => $ppp->chargeable,
            'number'                => $ppp->number,
            'colo_circuit_ref'      => $ppp->colo_circuit_ref,
            'ticket_ref'            => $ppp->ticket_ref,
            'private_notes'         => $ppp->private_notes,
            'owned_by'              => $ppp->owned_by,
            'description'           => $ppp->description,
            'colo_billing_ref'      => $ppp->colo_billing_ref,
        ] )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Models/PatchPanelPortHistoryFile.php">
    <LessSpecificImplementedReturnType>
      <code><![CDATA[\Illuminate\Database\Eloquent\Builder|PatchPanelPortHistoryFile]]></code>
      <code><![CDATA[\Illuminate\Database\Eloquent\Builder|PatchPanelPortHistoryFile]]></code>
      <code><![CDATA[\Illuminate\Database\Eloquent\Builder|PatchPanelPortHistoryFile]]></code>
    </LessSpecificImplementedReturnType>
    <UndefinedMagicMethod>
      <code><![CDATA[self::create([
            'patch_panel_port_history_id'   => $portHistory->id,
            'name'                          => $file->name,
            'type'                          => $file->type,
            'uploaded_at'                   => $file->uploaded_at,
            'uploaded_by'                   => $file->uploaded_by,
            'size'                          => $file->size,
            'is_private'                    => $file->is_private,
            'storage_location'              => $file->storage_location,
        ])]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Models/PeeringManager.php">
    <LessSpecificImplementedReturnType>
      <code><![CDATA[\Illuminate\Database\Eloquent\Builder|PeeringManager]]></code>
      <code><![CDATA[\Illuminate\Database\Eloquent\Builder|PeeringManager]]></code>
      <code><![CDATA[\Illuminate\Database\Eloquent\Builder|PeeringManager]]></code>
    </LessSpecificImplementedReturnType>
  </file>
  <file src="app/Models/PhysicalInterface.php">
    <InvalidNullableReturnType>
      <code><![CDATA[PhysicalInterface|bool]]></code>
      <code><![CDATA[int]]></code>
    </InvalidNullableReturnType>
    <LessSpecificImplementedReturnType>
      <code><![CDATA[Builder|PhysicalInterface]]></code>
      <code><![CDATA[Builder|PhysicalInterface]]></code>
      <code><![CDATA[Builder|PhysicalInterface]]></code>
    </LessSpecificImplementedReturnType>
    <NullableReturnStatement>
      <code><![CDATA[$ci->coreLink()->coreInterfaceSideA->physicalInterface]]></code>
      <code><![CDATA[$ci->coreLink()->coreInterfaceSideB->physicalInterface]]></code>
      <code><![CDATA[$this->rate_limit ?: $this->speed]]></code>
    </NullableReturnStatement>
  </file>
  <file src="app/Models/RouteServerFilter.php">
    <LessSpecificImplementedReturnType>
      <code><![CDATA[\Illuminate\Database\Eloquent\Builder|RouteServerFilter]]></code>
      <code><![CDATA[\Illuminate\Database\Eloquent\Builder|RouteServerFilter]]></code>
      <code><![CDATA[\Illuminate\Database\Eloquent\Builder|RouteServerFilter]]></code>
    </LessSpecificImplementedReturnType>
  </file>
  <file src="app/Models/RouteServerFilterProd.php">
    <LessSpecificImplementedReturnType>
      <code><![CDATA[\Illuminate\Database\Eloquent\Builder|RouteServerFilterProd]]></code>
      <code><![CDATA[\Illuminate\Database\Eloquent\Builder|RouteServerFilterProd]]></code>
      <code><![CDATA[\Illuminate\Database\Eloquent\Builder|RouteServerFilterProd]]></code>
    </LessSpecificImplementedReturnType>
    <UndefinedMagicMethod>
      <code><![CDATA[Customer::find( $model->customer_id )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Models/Router.php">
    <LessSpecificImplementedReturnType>
      <code><![CDATA[Builder|Router]]></code>
      <code><![CDATA[Builder|Router]]></code>
      <code><![CDATA[Builder|Router]]></code>
    </LessSpecificImplementedReturnType>
  </file>
  <file src="app/Models/RsPrefix.php">
    <LessSpecificImplementedReturnType>
      <code><![CDATA[\Illuminate\Database\Eloquent\Builder|RsPrefix]]></code>
      <code><![CDATA[\Illuminate\Database\Eloquent\Builder|RsPrefix]]></code>
      <code><![CDATA[\Illuminate\Database\Eloquent\Builder|RsPrefix]]></code>
    </LessSpecificImplementedReturnType>
  </file>
  <file src="app/Models/SflowReceiver.php">
    <LessSpecificImplementedReturnType>
      <code><![CDATA[\Illuminate\Database\Eloquent\Builder|SflowReceiver]]></code>
      <code><![CDATA[\Illuminate\Database\Eloquent\Builder|SflowReceiver]]></code>
      <code><![CDATA[\Illuminate\Database\Eloquent\Builder|SflowReceiver]]></code>
    </LessSpecificImplementedReturnType>
  </file>
  <file src="app/Models/SwitchPort.php">
    <ImplicitToStringCast>
      <code><![CDATA[now()]]></code>
    </ImplicitToStringCast>
    <LessSpecificImplementedReturnType>
      <code><![CDATA[Builder|SwitchPort]]></code>
      <code><![CDATA[Builder|SwitchPort]]></code>
      <code><![CDATA[Builder|SwitchPort]]></code>
    </LessSpecificImplementedReturnType>
    <MissingDocblockType>
      <code><![CDATA[public function snmpUpdate( SNMP $host, bool $logger = false, bool $nosave = false ): SwitchPort]]></code>
    </MissingDocblockType>
  </file>
  <file src="app/Models/Switcher.php">
    <ImplicitToStringCast>
      <code><![CDATA[now()]]></code>
    </ImplicitToStringCast>
    <LessSpecificImplementedReturnType>
      <code><![CDATA[Builder|Switcher]]></code>
      <code><![CDATA[Builder|Switcher]]></code>
      <code><![CDATA[Builder|Switcher]]></code>
    </LessSpecificImplementedReturnType>
    <MissingDocblockType>
      <code><![CDATA[public function snmpPollSwitchPorts( $host, $logger = false, bool|array &$result = false, bool $nosave = false ): Switcher]]></code>
    </MissingDocblockType>
    <RedundantCondition>
      <code><![CDATA[$logger]]></code>
    </RedundantCondition>
    <UndefinedMagicMethod>
      <code><![CDATA[SwitchPort::create( [
                        'switchid'  => $this->id,
                        'ifIndex'   => $index,
                        'active'    => true,
                        'type'      => SwitchPort::TYPE_UNSET,
                    ])]]></code>
      <code><![CDATA[SwitchPort::findOrFail( $ep->id )]]></code>
      <code><![CDATA[self::select( 'pi.*' )]]></code>
      <code><![CDATA[self::select( 'ppp.*' )]]></code>
    </UndefinedMagicMethod>
    <UndefinedMagicPropertyFetch>
      <code><![CDATA[$sp->physicalInterface->coreinterface]]></code>
    </UndefinedMagicPropertyFetch>
  </file>
  <file src="app/Models/TrafficDaily.php">
    <LessSpecificImplementedReturnType>
      <code><![CDATA[Builder|TrafficDaily]]></code>
      <code><![CDATA[Builder|TrafficDaily]]></code>
      <code><![CDATA[Builder|TrafficDaily]]></code>
    </LessSpecificImplementedReturnType>
    <UndefinedMagicMethod>
      <code><![CDATA[self::select( [ 'td.*', 'c.*'] )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Models/TrafficDailyPhysInt.php">
    <LessSpecificImplementedReturnType>
      <code><![CDATA[Builder|TrafficDailyPhysInt]]></code>
      <code><![CDATA[Builder|TrafficDailyPhysInt]]></code>
      <code><![CDATA[Builder|TrafficDailyPhysInt]]></code>
    </LessSpecificImplementedReturnType>
  </file>
  <file src="app/Models/User.php">
    <LessSpecificImplementedReturnType>
      <code><![CDATA[Builder|User]]></code>
      <code><![CDATA[Builder|User]]></code>
      <code><![CDATA[Builder|User]]></code>
    </LessSpecificImplementedReturnType>
    <UndefinedMagicMethod>
      <code><![CDATA[CustomerToUser::where( 'customer_id' , $this->custid )]]></code>
      <code><![CDATA[CustomerToUser::where( 'customer_id', $this->custid )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Models/User2FA.php">
    <LessSpecificImplementedReturnType>
      <code><![CDATA[\Illuminate\Database\Eloquent\Builder|User2FA]]></code>
      <code><![CDATA[\Illuminate\Database\Eloquent\Builder|User2FA]]></code>
      <code><![CDATA[\Illuminate\Database\Eloquent\Builder|User2FA]]></code>
    </LessSpecificImplementedReturnType>
  </file>
  <file src="app/Models/UserLoginHistory.php">
    <LessSpecificImplementedReturnType>
      <code><![CDATA[Builder|UserLoginHistory]]></code>
      <code><![CDATA[Builder|UserLoginHistory]]></code>
      <code><![CDATA[Builder|UserLoginHistory]]></code>
    </LessSpecificImplementedReturnType>
  </file>
  <file src="app/Models/UserRememberToken.php">
    <LessSpecificImplementedReturnType>
      <code><![CDATA[Builder|UserRememberToken]]></code>
      <code><![CDATA[Builder|UserRememberToken]]></code>
      <code><![CDATA[Builder|UserRememberToken]]></code>
    </LessSpecificImplementedReturnType>
  </file>
  <file src="app/Models/Vendor.php">
    <LessSpecificImplementedReturnType>
      <code><![CDATA[Builder|Vendor]]></code>
      <code><![CDATA[Builder|Vendor]]></code>
      <code><![CDATA[Builder|Vendor]]></code>
    </LessSpecificImplementedReturnType>
  </file>
  <file src="app/Models/VirtualInterface.php">
    <InvalidDocblock>
      <code><![CDATA[return $ci->coreLink()->coreBundle;]]></code>
    </InvalidDocblock>
    <InvalidReturnStatement>
      <code><![CDATA[$this->physicalInterfaces[ 0 ]->switchPort->type]]></code>
    </InvalidReturnStatement>
    <InvalidReturnType>
      <code><![CDATA[string|bool]]></code>
    </InvalidReturnType>
    <LessSpecificImplementedReturnType>
      <code><![CDATA[Builder|VirtualInterface]]></code>
      <code><![CDATA[Builder|VirtualInterface]]></code>
      <code><![CDATA[Builder|VirtualInterface]]></code>
    </LessSpecificImplementedReturnType>
    <NullableReturnStatement>
      <code><![CDATA[$this->physicalInterfaces[ 0 ]->switchPort->type]]></code>
    </NullableReturnStatement>
    <UndefinedMagicMethod>
      <code><![CDATA[self::from( 'virtualinterface AS vi' )]]></code>
      <code><![CDATA[self::select( 'sp.switchid AS switchid' )]]></code>
    </UndefinedMagicMethod>
    <UndefinedMagicPropertyFetch>
      <code><![CDATA[$pi->coreinterface]]></code>
    </UndefinedMagicPropertyFetch>
  </file>
  <file src="app/Models/Vlan.php">
    <LessSpecificImplementedReturnType>
      <code><![CDATA[Builder|Vlan]]></code>
      <code><![CDATA[Builder|Vlan]]></code>
      <code><![CDATA[Builder|Vlan]]></code>
    </LessSpecificImplementedReturnType>
  </file>
  <file src="app/Models/VlanInterface.php">
    <LessSpecificImplementedReturnType>
      <code><![CDATA[Builder|VlanInterface]]></code>
      <code><![CDATA[Builder|VlanInterface]]></code>
      <code><![CDATA[Builder|VlanInterface]]></code>
    </LessSpecificImplementedReturnType>
    <MissingDocblockType>
      <code><![CDATA[public function canGraphForLatency( string $proto ): bool]]></code>
      <code><![CDATA[public function getIPAddress( int|string $proto )]]></code>
    </MissingDocblockType>
  </file>
  <file src="app/Policies/RouteServerFilterPolicy.php">
    <MissingDocblockType>
      <code><![CDATA[public function before( User $user, $ability): bool]]></code>
      <code><![CDATA[public function checkCustObject( User $user, Customer $cust ): bool]]></code>
      <code><![CDATA[public function checkListCustomers( User $user ): bool]]></code>
      <code><![CDATA[public function checkRsfObject( User $user, RouteServerFilter $rsf ): bool]]></code>
    </MissingDocblockType>
  </file>
  <file src="app/Policies/UserPolicy.php">
    <UndefinedMagicMethod>
      <code><![CDATA[CustomerToUser::where( 'customer_id', $auth->custid )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Providers/AuthServiceProvider.php">
    <RedundantCondition>
      <code><![CDATA[method_exists( $guard, 'setCookieJar' )]]></code>
      <code><![CDATA[method_exists( $guard, 'setDispatcher' )]]></code>
      <code><![CDATA[method_exists( $guard, 'setRequest' )]]></code>
    </RedundantCondition>
  </file>
  <file src="app/Providers/DiagnosticsServiceProvider.php">
    <MissingDocblockType>
      <code><![CDATA[public function boot(): void]]></code>
      <code><![CDATA[public function register()]]></code>
    </MissingDocblockType>
  </file>
  <file src="app/Providers/GrapherServiceProvider.php">
    <MissingDocblockType>
      <code><![CDATA[public function boot(): void]]></code>
      <code><![CDATA[public function register()]]></code>
    </MissingDocblockType>
    <UndefinedInterfaceMethod>
      <code><![CDATA[$this->app]]></code>
      <code><![CDATA[$this->app]]></code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="app/Providers/IxpServiceProvider.php">
    <UndefinedMagicMethod>
      <code><![CDATA[Customer::select( [ 'id', 'name' ] )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Rules/Ipv4SubnetSize.php">
    <InvalidOperand>
      <code><![CDATA[config( "ixp.irrdb.min_v4_subnet_size" )]]></code>
    </InvalidOperand>
  </file>
  <file src="app/Rules/Ipv6SubnetSize.php">
    <InvalidOperand>
      <code><![CDATA[config( "ixp.irrdb.min_v6_subnet_size" )]]></code>
    </InvalidOperand>
  </file>
  <file src="app/Services/Auth/EloquentUserProvider.php">
    <MismatchingDocblockParamType>
      <code><![CDATA[Authenticatable|Model]]></code>
    </MismatchingDocblockParamType>
    <MissingDocblockType>
      <code><![CDATA[public function addRememberToken( $user ): UserRememberToken]]></code>
      <code><![CDATA[public function purgeExpiredRememberTokens( User $user ): void]]></code>
      <code><![CDATA[public function retrieveByToken( $identifier, $token ): ?Authenticatable]]></code>
    </MissingDocblockType>
    <UndefinedMagicMethod>
      <code><![CDATA[UserRememberToken::create([
            'user_id'   => $user->id,
            'token'     => Str::random(60),
            'device'    => $browser->getPlatform() . " " . $browser->getPlatformVersion(true) . " / " . $browser->getName() . " " . $browser->getVersion() ,
            'ip'        => IpAddress::getIp(),
            'expires'   => now()->addMinutes( config('auth.guards.web.expire', 60) ),
        ])]]></code>
      <code><![CDATA[UserRememberToken::where( 'user_id', $user->id )]]></code>
      <code><![CDATA[UserRememberToken::where( [ 'user_id' => $identifier ] )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Services/Auth/SessionGuard.php">
    <InvalidDocblock>
      <code><![CDATA[protected $userRememberToken;]]></code>
    </InvalidDocblock>
    <NoInterfaceProperties>
      <code><![CDATA[$this->user()->userRememberTokens]]></code>
    </NoInterfaceProperties>
    <UndefinedMagicMethod>
      <code><![CDATA[first]]></code>
      <code><![CDATA[first]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Services/Diagnostics/Suites/IrrdbDiagnosticSuite.php">
    <UndefinedMagicMethod>
      <code><![CDATA[IrrdbAsn::where( 'customer_id',$customer->id )]]></code>
      <code><![CDATA[IrrdbPrefix::where( 'customer_id',$customer->id )]]></code>
      <code><![CDATA[IrrdbUpdateLog::where( [ 'cust_id' =>$customer->id ] )]]></code>
      <code><![CDATA[IrrdbUpdateLog::where( [ 'cust_id' =>$customer->id ] )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Services/Diagnostics/Suites/PhysicalInterfaceDiagnosticSuite.php">
    <RedundantCondition>
      <code><![CDATA["Configured MTU is null/0 but switch port reports " . $this->pi->switchPort->ifMtu]]></code>
      <code><![CDATA["No, last polled: " . $lastPolled]]></code>
      <code><![CDATA[$mainName . " No, last polled: " . $lastPolled]]></code>
      <code><![CDATA[$mainName ."configured as null/0 but switch port reports " . $this->pi->switchPort->ifMtu]]></code>
      <code><![CDATA[$pi?->switchPort]]></code>
      <code><![CDATA[$pi?->switchPort]]></code>
    </RedundantCondition>
    <TypeDoesNotContainNull>
      <code><![CDATA[$pi]]></code>
      <code><![CDATA[$pi]]></code>
    </TypeDoesNotContainNull>
    <UndefinedMagicPropertyFetch>
      <code><![CDATA[$this->pi->switchPort->ifSpeed]]></code>
    </UndefinedMagicPropertyFetch>
  </file>
  <file src="app/Services/Diagnostics/Suites/RouterBgpSessionsDiagnosticSuite.php">
    <UndefinedMagicMethod>
      <code><![CDATA[Router::where( 'protocol', $protocol === 4 ? Router::PROTOCOL_IPV4 : Router::PROTOCOL_IPV6 )]]></code>
      <code><![CDATA[hasApi]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Services/Diagnostics/Suites/TransceiverDiagnosticSuite.php">
    <InvalidScalarArgument>
      <code><![CDATA[$matches[1]]]></code>
    </InvalidScalarArgument>
    <RedundantCondition>
      <code><![CDATA[$pi?->switchPort]]></code>
      <code><![CDATA[$pi?->switchPort]]></code>
    </RedundantCondition>
    <TypeDoesNotContainNull>
      <code><![CDATA[$pi]]></code>
      <code><![CDATA[$pi]]></code>
    </TypeDoesNotContainNull>
  </file>
  <file src="app/Services/Diagnostics/Suites/VirtualInterfaceDiagnosticSuite.php">
    <UndefinedMagicMethod>
      <code><![CDATA[SwitchPort::join( 'physicalinterface', 'switchport.id', '=', 'physicalinterface.switchportid' )]]></code>
      <code><![CDATA[VirtualInterface::select('virtualinterface.id')]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Services/Grapher.php">
    <InvalidArrayAccess>
      <code><![CDATA[config('grapher.backend')[0]]]></code>
      <code><![CDATA[config('grapher.backends')[ $backend ]]]></code>
    </InvalidArrayAccess>
    <MissingDocblockType>
      <code><![CDATA[public function backend( $backend = null ): BackendContract]]></code>
      <code><![CDATA[public function backendForGraph( Graph $graph, array $backends = [] ): BackendContract]]></code>
      <code><![CDATA[public function backendsForGraph( Graph $graph ): array]]></code>
      <code><![CDATA[public function latency( VlanInterface $vli ): LatencyGraph]]></code>
      <code><![CDATA[public function resolveBackend( string $backend = null ): string]]></code>
      <code><![CDATA[public function trunk( string $trunkname ): TrunkGraph]]></code>
    </MissingDocblockType>
    <NoValue>
      <code><![CDATA[$config]]></code>
      <code><![CDATA[$config]]></code>
      <code><![CDATA[$config]]></code>
    </NoValue>
  </file>
  <file src="app/Services/Grapher/Backend/Dummy.php">
    <InvalidArrayAccess>
      <code><![CDATA[$config['logdir']]]></code>
    </InvalidArrayAccess>
    <MissingDocblockType>
      <code><![CDATA[private function resolveFilePath( Graph $graph, $type ): string]]></code>
      <code><![CDATA[public function data( Graph $graph ): array]]></code>
      <code><![CDATA[public function png( Graph $graph ): string]]></code>
    </MissingDocblockType>
  </file>
  <file src="app/Services/Grapher/Backend/Mrtg.php">
    <InvalidArrayAccess>
      <code><![CDATA[$config[ 'logdir' ]]]></code>
      <code><![CDATA[$config['logdir']]]></code>
      <code><![CDATA[$config['logdir']]]></code>
      <code><![CDATA[$config['logdir']]]></code>
      <code><![CDATA[$config['logdir']]]></code>
      <code><![CDATA[$config['logdir']]]></code>
      <code><![CDATA[$config['logdir']]]></code>
      <code><![CDATA[$config['logdir']]]></code>
      <code><![CDATA[$config['logdir']]]></code>
    </InvalidArrayAccess>
    <MissingDocblockType>
      <code><![CDATA[public function data( Graph $graph ): array]]></code>
      <code><![CDATA[public function dataPath( Graph $graph ): string]]></code>
      <code><![CDATA[public function png( Graph $graph ): string]]></code>
      <code><![CDATA[public function resolveFilePath( Graph $graph, string $type ): string]]></code>
      <code><![CDATA[public function rrd( Graph $graph ): string]]></code>
    </MissingDocblockType>
    <UndefinedMagicPropertyFetch>
      <code><![CDATA[$cl->coreinterfacesidea]]></code>
      <code><![CDATA[$cl->coreinterfacesideb]]></code>
    </UndefinedMagicPropertyFetch>
  </file>
  <file src="app/Services/Grapher/Backend/Sflow.php">
    <InvalidArrayAccess>
      <code><![CDATA[$config['root']]]></code>
      <code><![CDATA[$config['root']]]></code>
      <code><![CDATA[$config['root']]]></code>
    </InvalidArrayAccess>
    <MissingDocblockType>
      <code><![CDATA[private function resolveFileName( Graph $graph, $type ): string]]></code>
      <code><![CDATA[private function resolveFilePath( Graph $graph, $type ): string]]></code>
      <code><![CDATA[public function data( Graph $graph ): array]]></code>
      <code><![CDATA[public function dataPath( Graph $graph ): string]]></code>
      <code><![CDATA[public function png( Graph $graph ): string]]></code>
      <code><![CDATA[public function rrd( Graph $graph ): string]]></code>
    </MissingDocblockType>
  </file>
  <file src="app/Services/Grapher/Backend/Smokeping.php">
    <InvalidArrayAccess>
      <code><![CDATA[$urls[ $graph->vli()->vlan->id ]]]></code>
    </InvalidArrayAccess>
    <MissingDocblockType>
      <code><![CDATA[private function resolveFilePath( Graph $graph ): string]]></code>
      <code><![CDATA[public function dataPath( Graph $graph ): string]]></code>
      <code><![CDATA[public function png( Graph $graph ): string]]></code>
    </MissingDocblockType>
    <UndefinedMagicMethod>
      <code><![CDATA[Vlan::findOrFail( $options[ 'vlanid' ] ?? null )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Services/Grapher/Graph.php">
    <InvalidCast>
      <code><![CDATA[config( 'identity.watermark' )]]></code>
    </InvalidCast>
    <InvalidOperand>
      <code><![CDATA[config( 'identity.orgname')]]></code>
    </InvalidOperand>
    <MissingDocblockType>
      <code><![CDATA[public function authorise(): bool]]></code>
      <code><![CDATA[public function backend(): GrapherBackend]]></code>
      <code><![CDATA[public function json(): string]]></code>
      <code><![CDATA[public function log(): string]]></code>
      <code><![CDATA[public function toc(): array]]></code>
    </MissingDocblockType>
  </file>
  <file src="app/Services/Grapher/Graph/CoreBundle.php">
    <RedundantCondition>
      <code><![CDATA[$this->coreBundle()]]></code>
    </RedundantCondition>
    <UndefinedMagicMethod>
      <code><![CDATA[CoreBundleModel::findOrFail( $cb )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Services/Grapher/Graph/Customer.php">
    <RedundantCondition>
      <code><![CDATA[$this->customer()]]></code>
    </RedundantCondition>
    <UndefinedMagicMethod>
      <code><![CDATA[CustomerModel::find( $us->custid )]]></code>
      <code><![CDATA[CustomerModel::findOrFail( $i )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Services/Grapher/Graph/IXP.php">
    <InvalidCast>
      <code><![CDATA[config( 'grapher.access.ixp' )]]></code>
    </InvalidCast>
    <TypeDoesNotContainType>
      <code><![CDATA[(int)config( 'grapher.access.ixp' ) === User::AUTH_PUBLIC]]></code>
    </TypeDoesNotContainType>
  </file>
  <file src="app/Services/Grapher/Graph/Infrastructure.php">
    <InvalidCast>
      <code><![CDATA[config( 'grapher.access.infrastructure' )]]></code>
    </InvalidCast>
    <RedundantCondition>
      <code><![CDATA[$this->infrastructure()]]></code>
    </RedundantCondition>
    <TypeDoesNotContainType>
      <code><![CDATA[(int)config( 'grapher.access.infrastructure' ) === User::AUTH_PUBLIC]]></code>
    </TypeDoesNotContainType>
    <UndefinedMagicMethod>
      <code><![CDATA[InfrastructureModel::findOrFail( $v )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Services/Grapher/Graph/Latency.php">
    <UndefinedMagicMethod>
      <code><![CDATA[VlanInterfaceModel::findOrFail( $vliid )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Services/Grapher/Graph/Location.php">
    <InvalidCast>
      <code><![CDATA[config( 'grapher.access.location' )]]></code>
      <code><![CDATA[config( 'grapher.access.location' )]]></code>
    </InvalidCast>
    <RedundantCondition>
      <code><![CDATA[$this->location()]]></code>
    </RedundantCondition>
    <TypeDoesNotContainType>
      <code><![CDATA[(int)config( 'grapher.access.location' ) === User::AUTH_PUBLIC]]></code>
    </TypeDoesNotContainType>
    <UndefinedMagicMethod>
      <code><![CDATA[LocationModel::findOrFail( $l )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Services/Grapher/Graph/P2p.php">
    <InvalidCast>
      <code><![CDATA[config( 'grapher.access.p2p' )]]></code>
    </InvalidCast>
    <RedundantCondition>
      <code><![CDATA[$this->dvli()]]></code>
      <code><![CDATA[$this->svli()]]></code>
    </RedundantCondition>
    <UndefinedMagicMethod>
      <code><![CDATA[VlanInterfaceModel::findOrFail( $vli )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Services/Grapher/Graph/PhysicalInterface.php">
    <InvalidNullableReturnType>
      <code><![CDATA[Customer]]></code>
      <code><![CDATA[string]]></code>
    </InvalidNullableReturnType>
    <NullableReturnStatement>
      <code><![CDATA[$this->physicalInterface()->switchPort->name]]></code>
      <code><![CDATA[$this->physint->virtualInterface->customer]]></code>
    </NullableReturnStatement>
    <RedundantCondition>
      <code><![CDATA[$this->physicalInterface()]]></code>
    </RedundantCondition>
    <UndefinedMagicMethod>
      <code><![CDATA[PhysicalInterfaceModel::findOrFail( $pi )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Services/Grapher/Graph/Switcher.php">
    <InvalidCast>
      <code><![CDATA[config( 'grapher.access.switch' )]]></code>
      <code><![CDATA[config( 'grapher.access.switch' )]]></code>
    </InvalidCast>
    <RedundantCondition>
      <code><![CDATA[$this->switch()]]></code>
    </RedundantCondition>
    <TypeDoesNotContainType>
      <code><![CDATA[(int)config( 'grapher.access.switch' ) === User::AUTH_PUBLIC]]></code>
    </TypeDoesNotContainType>
    <UndefinedMagicMethod>
      <code><![CDATA[SwitcherModel::findOrFail( $s )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Services/Grapher/Graph/Trunk.php">
    <InvalidCast>
      <code><![CDATA[config( 'grapher.access.trunk' )]]></code>
    </InvalidCast>
    <MissingDocblockType>
      <code><![CDATA[public function __construct( Grapher $grapher, string $n )]]></code>
      <code><![CDATA[public function setTrunkname( string $n ): Trunk]]></code>
    </MissingDocblockType>
    <TypeDoesNotContainType>
      <code><![CDATA[(int)config( 'grapher.access.trunk' ) === User::AUTH_PUBLIC]]></code>
    </TypeDoesNotContainType>
  </file>
  <file src="app/Services/Grapher/Graph/VirtualInterface.php">
    <InvalidNullableReturnType>
      <code><![CDATA[Customer]]></code>
    </InvalidNullableReturnType>
    <NullableReturnStatement>
      <code><![CDATA[$this->virtint->customer]]></code>
    </NullableReturnStatement>
    <RedundantCondition>
      <code><![CDATA[$this->virtualInterface()]]></code>
    </RedundantCondition>
    <UndefinedMagicMethod>
      <code><![CDATA[VirtualInterfaceModel::findOrFail( $vi )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Services/Grapher/Graph/Vlan.php">
    <InvalidCast>
      <code><![CDATA[config( 'grapher.access.vlan' )]]></code>
    </InvalidCast>
    <RedundantCondition>
      <code><![CDATA[$this->vlan()]]></code>
    </RedundantCondition>
    <TypeDoesNotContainType>
      <code><![CDATA[(int)config( 'grapher.access.vlan' ) === User::AUTH_PUBLIC]]></code>
    </TypeDoesNotContainType>
    <UndefinedMagicMethod>
      <code><![CDATA[VlanModel::findOrFail( $v )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Services/Grapher/Graph/VlanInterface.php">
    <InvalidCast>
      <code><![CDATA[config( 'grapher.access.customer' )]]></code>
    </InvalidCast>
    <InvalidNullableReturnType>
      <code><![CDATA[Customer]]></code>
    </InvalidNullableReturnType>
    <NullableReturnStatement>
      <code><![CDATA[$this->vlanint->virtualInterface->customer]]></code>
    </NullableReturnStatement>
    <RedundantCondition>
      <code><![CDATA[$this->vlanInterface()]]></code>
    </RedundantCondition>
    <TypeDoesNotContainType>
      <code><![CDATA[(int)config( 'grapher.access.customer' ) === User::AUTH_PUBLIC]]></code>
    </TypeDoesNotContainType>
    <UndefinedMagicMethod>
      <code><![CDATA[VlanInterfaceModel::findOrFail( $vli )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Services/Grapher/Statistics.php">
    <RedundantCondition>
      <code><![CDATA[is_array( $data )]]></code>
    </RedundantCondition>
  </file>
  <file src="app/Services/Helpdesk/Zendesk.php">
    <ImplementedReturnTypeMismatch>
      <code><![CDATA[Contact|bool]]></code>
    </ImplementedReturnTypeMismatch>
    <ImplicitToStringCast>
      <code><![CDATA[now()]]></code>
    </ImplicitToStringCast>
    <InvalidScalarArgument>
      <code><![CDATA[60/200]]></code>
    </InvalidScalarArgument>
    <MismatchingDocblockReturnType>
      <code><![CDATA[Contact|bool]]></code>
    </MismatchingDocblockReturnType>
    <MissingDocblockType>
      <code><![CDATA[protected function callApi( $fn )]]></code>
      <code><![CDATA[public function __construct( $config )]]></code>
      <code><![CDATA[public function organisationFind( int $id )]]></code>
      <code><![CDATA[public function organisationUpdate( int $helpdeskId, Customer $cust )]]></code>
      <code><![CDATA[public function userFind( int  $id )]]></code>
    </MissingDocblockType>
    <UndefinedMagicMethod>
      <code><![CDATA[Contact::create([
            'name'      => $user->name,
            'email'     => $user->email,
            'mobile'    => $user->phone,
        ])]]></code>
      <code><![CDATA[getUser]]></code>
      <code><![CDATA[getUser]]></code>
    </UndefinedMagicMethod>
    <UndefinedMagicPropertyAssignment>
      <code><![CDATA[$cust->helpdesk_id]]></code>
    </UndefinedMagicPropertyAssignment>
  </file>
  <file src="app/Services/IXF.php">
    <TooManyArguments>
      <code><![CDATA[fake]]></code>
    </TooManyArguments>
  </file>
  <file src="app/Services/LookingGlass.php">
    <MissingDocblockType>
      <code><![CDATA[public function forRouter( Router $router )]]></code>
    </MissingDocblockType>
  </file>
  <file src="app/Services/PeeringDb.php">
    <InvalidOperand>
      <code><![CDATA[config( 'ixp_api.peeringDB.api-key' )]]></code>
    </InvalidOperand>
    <TooManyArguments>
      <code><![CDATA[fake]]></code>
    </TooManyArguments>
  </file>
  <file src="app/Services/Purifier.php">
    <TypeDoesNotContainType>
      <code><![CDATA[is_string($config)]]></code>
    </TypeDoesNotContainType>
  </file>
  <file src="app/Services/RipeAtlas/ApiCall.php">
    <InvalidOperand>
      <code><![CDATA[config( "ixp_api.atlas_measurement_key" )]]></code>
      <code><![CDATA[config('ixp_api.atlas_measurement_key' )]]></code>
      <code><![CDATA[config('ixp_api.atlas_measurement_key')]]></code>
    </InvalidOperand>
    <MissingDocblockType>
      <code><![CDATA[public function myAtlasMeasurements(): array]]></code>
      <code><![CDATA[public function queryAtlasForProbes( $customer, $protocol ): array]]></code>
      <code><![CDATA[public function requestAtlasTraceroute( $fromASN, $target, $protocol ): ?int]]></code>
      <code><![CDATA[public function updateAtlasMeasurement( int $atlasId ): array]]></code>
    </MissingDocblockType>
  </file>
  <file src="app/Services/RipeAtlas/Interpretor.php">
    <MismatchingDocblockReturnType>
      <code><![CDATA[integer]]></code>
    </MismatchingDocblockReturnType>
    <MissingDocblockType>
      <code><![CDATA[public function interpret( AtlasMeasurement $atlasMeasurement ): AtlasResult]]></code>
    </MissingDocblockType>
  </file>
  <file src="app/Tasks/Irrdb/UpdateAsnDb.php">
    <MissingDocblockType>
      <code><![CDATA[public function update(): array]]></code>
    </MissingDocblockType>
    <UndefinedMagicMethod>
      <code><![CDATA[whereProtocol]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Tasks/Irrdb/UpdateDb.php">
    <MissingDocblockType>
      <code><![CDATA[protected function updateDb( array $fromIrrdb, int $protocol, $type = 'prefix' ): bool]]></code>
      <code><![CDATA[public function setBgpq3( Bgpq3 $bgpq3 ): UpdateDb]]></code>
    </MissingDocblockType>
    <UndefinedMagicMethod>
      <code><![CDATA[$model::create(
                    [
                        'customer_id'   => $this->customer()->id,
                        $type           => $p,
                        'protocol'      => $protocol,
                        'last_seen'     => $now,
                        'first_seen'    => $now,
                    ]
                )]]></code>
      <code><![CDATA[$model::create(
                    [
                        'customer_id'   => $this->customer()->id,
                        $type           => $p,
                        'protocol'      => $protocol,
                        'last_seen'     => $now,
                        'first_seen'    => $now,
                    ]
                )]]></code>
      <code><![CDATA[$model::where( 'customer_id', $this->customer()->id )]]></code>
      <code><![CDATA[$model::where( 'customer_id', $this->customer()->id )]]></code>
      <code><![CDATA[$model::where( 'id', $p['id'] )]]></code>
      <code><![CDATA[$model::where( 'id', $p['id'] )]]></code>
      <code><![CDATA[IrrdbUpdateLog::updateOrCreate(
            [ 'cust_id' => $this->customer()->id ],
            [ "{$type}_v{$protocol}" => now() ]
        )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Tasks/Irrdb/UpdatePrefixDb.php">
    <MissingDocblockType>
      <code><![CDATA[public function update(): array]]></code>
    </MissingDocblockType>
    <UndefinedMagicMethod>
      <code><![CDATA[whereProtocol]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Tasks/Rir/Generator.php">
    <MissingDocblockType>
      <code><![CDATA[$asns[ $c->autsys ]]]></code>
      <code><![CDATA[private function generateASNs( Collection $customers ): array]]></code>
      <code><![CDATA[private function generateRouteServerClientDetails( Collection $customers ): array]]></code>
      <code><![CDATA[public function generate(): string]]></code>
    </MissingDocblockType>
    <UndefinedMagicMethod>
      <code><![CDATA[orderBy]]></code>
      <code><![CDATA[where]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Tasks/Router/ConfigurationGenerator.php">
    <MissingDocblockType>
      <code><![CDATA[public function __construct( Router $r )]]></code>
      <code><![CDATA[public function render(): ViewContract]]></code>
      <code><![CDATA[public function setRouter( Router $router ): ConfigurationGenerator]]></code>
    </MissingDocblockType>
  </file>
  <file src="app/Tasks/Yaml/SwitchConfigurationGenerator.php">
    <MissingDocblockType>
      <code><![CDATA[public function generate(): array]]></code>
    </MissingDocblockType>
  </file>
  <file src="app/Traits/Observable.php">
    <UndefinedMagicMethod>
      <code><![CDATA[Log::create(
            [
                'user_id'   => Auth::check() ? Auth::id() : null,
                'model'     => self::getClass(),
                'model_id'  => $model->id,
                'action'    => $action,
                'message'   => static::logSubject( $model ),
                'models'    => [
                    'new'       => $action !== Log::ACTION_DELETED ? $model->getAttributes()  : null,
                    'old'       => $action !== Log::ACTION_CREATED ? $model->getOriginal()    : null,
                    'changed'   => $action === Log::ACTION_UPDATED ? $model->getChanges()     : null,
                ]
            ]
        )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Utils/Bgpq3.php">
    <InvalidOperand>
      <code><![CDATA[$minSubnetSize]]></code>
    </InvalidOperand>
  </file>
  <file src="app/Utils/Export/JsonSchema.php">
    <MissingDocblockType>
      <code><![CDATA[private function getIXPInfo( string $version ): array]]></code>
      <code><![CDATA[public function get( string $version = null, $asArray = false, $detailed = true, $tags = false )]]></code>
    </MissingDocblockType>
    <UndefinedInterfaceMethod>
      <code><![CDATA[isSuperUser]]></code>
    </UndefinedInterfaceMethod>
    <UndefinedMagicMethod>
      <code><![CDATA[NetworkInfo::join( 'vlan', 'vlan.id', 'networkinfo.vlanid' )]]></code>
      <code><![CDATA[Router::select( [ 'vlan_id', 'peering_ip' ] )]]></code>
      <code><![CDATA[Router::where( 'type', Router::TYPE_ROUTE_COLLECTOR )]]></code>
      <code><![CDATA[Router::where( 'type', Router::TYPE_ROUTE_SERVER )]]></code>
      <code><![CDATA[Router::where( 'type', Router::TYPE_ROUTE_SERVER )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Utils/Foil/Extensions/IXP.php">
    <InvalidLiteralArgument>
      <code><![CDATA['bkmgtpezy']]></code>
    </InvalidLiteralArgument>
  </file>
  <file src="app/Utils/Former/Framework/TwitterBootstrap4.php">
    <ImplementedReturnTypeMismatch>
      <code><![CDATA[string|null]]></code>
    </ImplementedReturnTypeMismatch>
  </file>
  <file src="app/Utils/Grapher/Mrtg.php">
    <MissingDocblockType>
      <code><![CDATA[protected function loadMrtgFile(): array]]></code>
    </MissingDocblockType>
  </file>
  <file src="app/Utils/Grapher/Rrd.php">
    <InvalidScalarArgument>
      <code><![CDATA[$this->graph()->periodEnd()->timestamp]]></code>
      <code><![CDATA[$this->graph()->periodStart()->timestamp]]></code>
      <code><![CDATA[time() - self::PERIOD_TIME[ $this->graph()->period() ]]]></code>
    </InvalidScalarArgument>
    <MissingDocblockType>
      <code><![CDATA[private function getLocalCopy(): string]]></code>
      <code><![CDATA[private function getLocalDirectory(): string]]></code>
      <code><![CDATA[private function getLocalFilename( $ext = 'rrd' ): string]]></code>
      <code><![CDATA[protected function loadRrdFile(): void]]></code>
      <code><![CDATA[public function __construct( string $file, Graph $graph )]]></code>
      <code><![CDATA[public function data(): array]]></code>
      <code><![CDATA[public function png(): string]]></code>
      <code><![CDATA[public function rrd()]]></code>
    </MissingDocblockType>
    <TypeDoesNotContainType>
      <code><![CDATA[!is_array( $rrd )]]></code>
      <code><![CDATA[$rrd === false]]></code>
      <code><![CDATA[$rrd === false]]></code>
      <code><![CDATA[$rrd === false || !is_array( $rrd )]]></code>
    </TypeDoesNotContainType>
  </file>
  <file src="app/Utils/Http/Controllers/Frontend/EloquentController.php">
    <MissingDocblockType>
      <code><![CDATA[public function delete( Request $r ): RedirectResponse]]></code>
      <code><![CDATA[public function edit( int $id ): View]]></code>
      <code><![CDATA[public function store( Request $r )]]></code>
    </MissingDocblockType>
    <NoInterfaceProperties>
      <code><![CDATA[Auth::getUser()->username]]></code>
      <code><![CDATA[Auth::getUser()->username]]></code>
    </NoInterfaceProperties>
    <RedundantCondition>
      <code><![CDATA[is_array( $data )]]></code>
    </RedundantCondition>
  </file>
  <file src="app/Utils/IpAddress.php">
    <MissingDocblockType>
      <code><![CDATA[public static function toArpa( string $ip, int $protocol ): string]]></code>
    </MissingDocblockType>
  </file>
  <file src="app/Utils/MailingList.php">
    <UndefinedMagicMethod>
      <code><![CDATA[User::when( $subscribed, function ( $query ) {
            return $query->whereJsonContains( 'prefs->mailinglist', [ $this->key => "1" ] );
        }, function ($query) {
            return $query->whereJsonContains( 'prefs->mailinglist', [ $this->key => "0" ] );
        })]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="data/SocialiteProviders/src/PeeringDB/Provider.php">
    <ImplicitToStringCast>
      <code><![CDATA[$response->getBody()]]></code>
    </ImplicitToStringCast>
  </file>
  <file src="database/migrations/2021_04_14_125742_user_pref.php">
    <UndefinedMagicMethod>
      <code><![CDATA[User::find( $user_id )]]></code>
      <code><![CDATA[User::find( $user_id )]]></code>
      <code><![CDATA[User::find( $user_id )]]></code>
      <code><![CDATA[User::find( $user_id )]]></code>
      <code><![CDATA[User::find( $user_id )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="database/seeders/ContactGroups.php">
    <UndefinedMagicMethod>
      <code><![CDATA[ContactGroup::create([
                'name'          => $name,
                'description'   => sprintf( "Contact role for %s matters", strtolower( $name ) ),
                'type'          => ContactGroup::TYPE_ROLE,
                'active'        => true,
                'limited_to'    => 0,
            ])]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="database/seeders/IRRDBs.php">
    <UndefinedMagicMethod>
      <code><![CDATA[IrrdbConfig::create([
                'host'      => $irrdb['host'],
                'source'    => $irrdb['source'],
                'notes'     => $irrdb['notes'],
            ])]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="database/seeders/Vendors.php">
    <UndefinedMagicMethod>
      <code><![CDATA[Vendor::create([
                'name'          => $vendor[0],
                'shortname'     => $vendor[1],
                'nagios_name'   => $vendor[2],
                'bundle_name'   => $vendor[3] ?? null,
            ])]]></code>
    </UndefinedMagicMethod>
  </file>
</files>
